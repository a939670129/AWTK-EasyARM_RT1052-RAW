<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [sdram_debug\awtk.out]</title></head>
<body><HR>
<H1>Static Call Graph for image sdram_debug\awtk.out</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed May 30 02:20:41 2018
<BR><P>
<H3>Maximum Stack Usage =        568 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
on_close &rArr; window_close &rArr; window_manager_remove_child &rArr; window_manager_check_if_need_close_animation &rArr; window_animator_create_for_close &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[cf]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[cf]">NMI_Handler</a><BR>
 <LI><a href="#[d0]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d0]">HardFault_Handler</a><BR>
 <LI><a href="#[d1]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d1]">MemManage_Handler</a><BR>
 <LI><a href="#[d2]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d2]">BusFault_Handler</a><BR>
 <LI><a href="#[d3]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d3]">UsageFault_Handler</a><BR>
 <LI><a href="#[d4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d4]">SVC_Handler</a><BR>
 <LI><a href="#[d5]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d5]">DebugMon_Handler</a><BR>
 <LI><a href="#[d6]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d6]">PendSV_Handler</a><BR>
 <LI><a href="#[be]">widget_invalidate_default</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[be]">widget_invalidate_default</a><BR>
 <LI><a href="#[3b3]">widget_on_paint_children</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ba]">widget_on_paint_children_default</a><BR>
 <LI><a href="#[32f]">node_merge</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32f]">node_merge</a><BR>
 <LI><a href="#[3ab]">widget_set_dirty</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ab]">widget_set_dirty</a><BR>
 <LI><a href="#[2a1]">widget_layout_children</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a1]">widget_layout_children</a><BR>
 <LI><a href="#[3a3]">widget_destroy_children</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a2]">widget_destroy</a><BR>
 <LI><a href="#[3b9]">widget_on_pointer_up</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b9]">widget_on_pointer_up</a><BR>
 <LI><a href="#[3b8]">widget_on_pointer_move</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b8]">widget_on_pointer_move</a><BR>
 <LI><a href="#[3b7]">widget_on_pointer_down</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b7]">widget_on_pointer_down</a><BR>
 <LI><a href="#[3b1]">widget_on_keyup</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b1]">widget_on_keyup</a><BR>
 <LI><a href="#[3b0]">widget_on_keydown</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b0]">widget_on_keydown</a><BR>
 <LI><a href="#[3ae]">widget_lookup_all</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ae]">widget_lookup_all</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[153]">ACMP1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[154]">ACMP2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[155]">ACMP3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[156]">ACMP4_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[11b]">ADC1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[11c]">ADC2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[151]">ADC_ETC_ERROR_IRQ_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[14e]">ADC_ETC_IRQ0_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[14f]">ADC_ETC_IRQ1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[150]">ADC_ETC_IRQ2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[115]">ANATOP_EVENT0_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[116]">ANATOP_EVENT1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[117]">ANATOP_TAMP_LOW_HIGH_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[118]">ANATOP_TEMP_PANIC_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[10f]">BEE_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d2]">BusFault_Handler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[2d]">CAN1_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[fc]">CAN1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[2e]">CAN2_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[fd]">CAN2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[137]">CCM_1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[138]">CCM_2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[eb]">CORE_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[103]">CSI_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[109]">CSU_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[e9]">CTI0_ERROR_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ea]">CTI1_ERROR_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[11d]">DCDC_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[10a]">DCP_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[10b]">DCP_VMI_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c]">DMA0_DMA16_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[d8]">DMA0_DMA16_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[16]">DMA10_DMA26_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e2]">DMA10_DMA26_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[17]">DMA11_DMA27_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e3]">DMA11_DMA27_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[18]">DMA12_DMA28_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e4]">DMA12_DMA28_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[19]">DMA13_DMA29_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e5]">DMA13_DMA29_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1a]">DMA14_DMA30_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e6]">DMA14_DMA30_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1b]">DMA15_DMA31_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e7]">DMA15_DMA31_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d]">DMA1_DMA17_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[d9]">DMA1_DMA17_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[e]">DMA2_DMA18_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[da]">DMA2_DMA18_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[f]">DMA3_DMA19_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[db]">DMA3_DMA19_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[10]">DMA4_DMA20_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[dc]">DMA4_DMA20_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[11]">DMA5_DMA21_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[dd]">DMA5_DMA21_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[12]">DMA6_DMA22_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[de]">DMA6_DMA22_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[13]">DMA7_DMA23_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[df]">DMA7_DMA23_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[14]">DMA8_DMA24_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e0]">DMA8_DMA24_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[15]">DMA9_DMA25_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e1]">DMA9_DMA25_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1c]">DMA_ERROR_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[e8]">DMA_ERROR_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3e]">DbgConsole_RelocateLog</a> from fsl_debug_console.o(i.DbgConsole_RelocateLog) referenced from fsl_debug_console.o(i.DbgConsole_Printf)
 <LI><a href="#[d5]">DebugMon_Handler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3b]">DefaultISR</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[3b]">DefaultISR</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced 79 times from startup_mimxrt1052.o(RESET)
 <LI><a href="#[159]">ENC1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[15a]">ENC2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[15b]">ENC3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[15c]">ENC4_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3a]">ENET_1588_Timer_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[14b]">ENET_1588_Timer_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[39]">ENET_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[14a]">ENET_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[136]">EWM_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[34]">FLEXIO1_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[132]">FLEXIO1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[35]">FLEXIO2_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[133]">FLEXIO2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[fe]">FLEXRAM_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[36]">FLEXSPI_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[144]">FLEXSPI_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[139]">GPC_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[128]">GPIO1_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[129]">GPIO1_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[120]">GPIO1_INT0_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[121]">GPIO1_INT1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[122]">GPIO1_INT2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[123]">GPIO1_INT3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[124]">GPIO1_INT4_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[125]">GPIO1_INT5_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[126]">GPIO1_INT6_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[127]">GPIO1_INT7_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[12a]">GPIO2_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[12b]">GPIO2_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[12c]">GPIO3_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[12d]">GPIO3_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[12e]">GPIO4_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[12f]">GPIO4_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[130]">GPIO5_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[131]">GPIO5_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[101]">GPR_IRQ_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[13c]">GPT1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[13d]">GPT2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d0]">HardFault_Handler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ff]">KPP_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[102]">LCDIF_IRQHandler</a> from lcd_support.o(i.LCDIF_IRQHandler) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[25]">LPI2C1_DriverIRQHandler</a> from fsl_lpi2c.o(i.LPI2C1_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f4]">LPI2C1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[26]">LPI2C2_DriverIRQHandler</a> from fsl_lpi2c.o(i.LPI2C2_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f5]">LPI2C2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[27]">LPI2C3_DriverIRQHandler</a> from fsl_lpi2c.o(i.LPI2C3_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f6]">LPI2C3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[28]">LPI2C4_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f7]">LPI2C4_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[29]">LPSPI1_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f8]">LPSPI1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[2a]">LPSPI2_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f9]">LPSPI2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[2b]">LPSPI3_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[fa]">LPSPI3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[2c]">LPSPI4_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[fb]">LPSPI4_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1d]">LPUART1_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART1_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[ec]">LPUART1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1e]">LPUART2_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART2_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[ed]">LPUART2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1f]">LPUART3_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART3_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[ee]">LPUART3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[20]">LPUART4_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART4_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[ef]">LPUART4_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[21]">LPUART5_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART5_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f0]">LPUART5_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[22]">LPUART6_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART6_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f1]">LPUART6_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[23]">LPUART7_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART7_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f2]">LPUART7_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[24]">LPUART8_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART8_DriverIRQHandler) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[f3]">LPUART8_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d1]">MemManage_Handler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[cf]">NMI_Handler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[177]">NMI_WAKEUP_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[152]">PIT_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[13e]">PWM1_0_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[13f]">PWM1_1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[140]">PWM1_2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[141]">PWM1_3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[142]">PWM1_FAULT_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[161]">PWM2_0_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[162]">PWM2_1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[163]">PWM2_2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[164]">PWM2_3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[165]">PWM2_FAULT_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[166]">PWM3_0_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[167]">PWM3_1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[168]">PWM3_2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[169]">PWM3_3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[16a]">PWM3_FAULT_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[16b]">PWM4_0_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[16c]">PWM4_1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[16d]">PWM4_2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[16e]">PWM4_3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[16f]">PWM4_FAULT_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[104]">PXP_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d6]">PendSV_Handler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[135]">RTWDOG_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[13b]">Reserved115_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[143]">Reserved123_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[157]">Reserved143_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[158]">Reserved144_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[170]">Reserved168_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[171]">Reserved169_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[172]">Reserved170_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[173]">Reserved171_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[174]">Reserved172_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[175]">Reserved173_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[10c]">Reserved68_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[11e]">Reserved86_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[11f]">Reserved87_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ce]">Reset_Handler</a> from startup_mimxrt1052.o(RES_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[2f]">SAI1_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[110]">SAI1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[30]">SAI2_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[111]">SAI2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[31]">SAI3_RX_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[112]">SAI3_RX_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[32]">SAI3_TX_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[113]">SAI3_TX_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[145]">SEMC_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[176]">SJC_ARM_DEBUG_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[10e]">SJC_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[106]">SNVS_HP_WRAPPER_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[107]">SNVS_HP_WRAPPER_TZ_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[108]">SNVS_LP_WRAPPER_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[33]">SPDIF_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[114]">SPDIF_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[13a]">SRC_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d4]">SVC_Handler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d7]">SysTick_Handler</a> from platform.o(i.SysTick_Handler) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3c]">SystemInit</a> from system_mimxrt1052.o(i.SystemInit) referenced from startup_mimxrt1052.o(RES_HANDLER)
 <LI><a href="#[15d]">TMR1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[15e]">TMR2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[15f]">TMR3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[160]">TMR4_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[10d]">TRNG_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[100]">TSC_DIG_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[149]">USB_OTG1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[148]">USB_OTG2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[119]">USB_PHY1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[11a]">USB_PHY2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[37]">USDHC1_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[146]">USDHC1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[38]">USDHC2_DriverIRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(OTHER_HANDLER)
 <LI><a href="#[147]">USDHC2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d3]">UsageFault_Handler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[134]">WDOG1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[105]">WDOG2_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[14c]">XBAR1_IRQ_0_1_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[14d]">XBAR1_IRQ_2_3_IRQHandler</a> from startup_mimxrt1052.o(OTHER_HANDLER) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[178]">__main</a> from __main.o(!!!main) referenced from startup_mimxrt1052.o(RES_HANDLER)
 <LI><a href="#[9]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[b]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[a]">_snputc</a> from _snputc.o(.text) referenced from noretval__2snprintf.o(.text)
 <LI><a href="#[80]">button_on_event</a> from button.o(i.button_on_event) referenced from button.o(.constdata)
 <LI><a href="#[7f]">button_on_paint_self</a> from button.o(i.button_on_paint_self) referenced from button.o(.constdata)
 <LI><a href="#[81]">check_button_get_prop</a> from check_button.o(i.check_button_get_prop) referenced from check_button.o(.constdata)
 <LI><a href="#[84]">check_button_on_event</a> from check_button.o(i.check_button_on_event) referenced from check_button.o(.constdata)
 <LI><a href="#[83]">check_button_on_paint_self</a> from check_button.o(i.check_button_on_paint_self) referenced from check_button.o(.constdata)
 <LI><a href="#[82]">check_button_set_prop</a> from check_button.o(i.check_button_set_prop) referenced from check_button.o(.constdata)
 <LI><a href="#[89]">dialog_destroy</a> from dialog.o(i.dialog_destroy) referenced from dialog.o(.constdata)
 <LI><a href="#[85]">dialog_get_prop</a> from dialog.o(i.dialog_get_prop) referenced from dialog.o(.constdata)
 <LI><a href="#[44]">dialog_idle_close</a> from dialog.o(i.dialog_idle_close) referenced from dialog.o(i.dialog_modal)
 <LI><a href="#[87]">dialog_on_paint_self</a> from dialog.o(i.dialog_on_paint_self) referenced from dialog.o(.constdata)
 <LI><a href="#[88]">dialog_on_relayout_children</a> from dialog.o(i.dialog_on_relayout_children) referenced from dialog.o(.constdata)
 <LI><a href="#[86]">dialog_set_prop</a> from dialog.o(i.dialog_set_prop) referenced from dialog.o(.constdata)
 <LI><a href="#[9c]">easing_back_in</a> from easing.o(i.easing_back_in) referenced from easing.o(.constdata)
 <LI><a href="#[9e]">easing_back_inout</a> from easing.o(i.easing_back_inout) referenced from easing.o(.constdata)
 <LI><a href="#[9d]">easing_back_out</a> from easing.o(i.easing_back_out) referenced from easing.o(.constdata)
 <LI><a href="#[9f]">easing_bounce_in</a> from easing.o(i.easing_bounce_in) referenced from easing.o(.constdata)
 <LI><a href="#[a1]">easing_bounce_inout</a> from easing.o(i.easing_bounce_inout) referenced from easing.o(.constdata)
 <LI><a href="#[a0]">easing_bounce_out</a> from easing.o(i.easing_bounce_out) referenced from easing.o(.constdata)
 <LI><a href="#[96]">easing_circular_in</a> from easing.o(i.easing_circular_in) referenced from easing.o(.constdata)
 <LI><a href="#[98]">easing_circular_inout</a> from easing.o(i.easing_circular_inout) referenced from easing.o(.constdata)
 <LI><a href="#[97]">easing_circular_out</a> from easing.o(i.easing_circular_out) referenced from easing.o(.constdata)
 <LI><a href="#[8e]">easing_cubic_in</a> from easing.o(i.easing_cubic_in) referenced from easing.o(.constdata)
 <LI><a href="#[8f]">easing_cubic_out</a> from easing.o(i.easing_cubic_out) referenced from easing.o(.constdata)
 <LI><a href="#[99]">easing_elastic_in</a> from easing.o(i.easing_elastic_in) referenced from easing.o(.constdata)
 <LI><a href="#[9b]">easing_elastic_inout</a> from easing.o(i.easing_elastic_inout) referenced from easing.o(.constdata)
 <LI><a href="#[9a]">easing_elastic_out</a> from easing.o(i.easing_elastic_out) referenced from easing.o(.constdata)
 <LI><a href="#[8a]">easing_linear</a> from easing.o(i.easing_linear) referenced from easing.o(.constdata)
 <LI><a href="#[93]">easing_pow_in</a> from easing.o(i.easing_pow_in) referenced from easing.o(.constdata)
 <LI><a href="#[95]">easing_pow_inout</a> from easing.o(i.easing_pow_inout) referenced from easing.o(.constdata)
 <LI><a href="#[94]">easing_pow_out</a> from easing.o(i.easing_pow_out) referenced from easing.o(.constdata)
 <LI><a href="#[8b]">easing_quadratic_in</a> from easing.o(i.easing_quadratic_in) referenced from easing.o(.constdata)
 <LI><a href="#[8d]">easing_quadratic_inout</a> from easing.o(i.easing_quadratic_inout) referenced from easing.o(.constdata)
 <LI><a href="#[8c]">easing_quadratic_out</a> from easing.o(i.easing_quadratic_out) referenced from easing.o(.constdata)
 <LI><a href="#[90]">easing_sin_in</a> from easing.o(i.easing_sin_in) referenced from easing.o(.constdata)
 <LI><a href="#[92]">easing_sin_inout</a> from easing.o(i.easing_sin_inout) referenced from easing.o(.constdata)
 <LI><a href="#[91]">easing_sin_out</a> from easing.o(i.easing_sin_out) referenced from easing.o(.constdata)
 <LI><a href="#[a2]">edit_get_prop</a> from edit.o(i.edit_get_prop) referenced from edit.o(.constdata)
 <LI><a href="#[a5]">edit_on_event</a> from edit.o(i.edit_on_event) referenced from edit.o(.constdata)
 <LI><a href="#[a4]">edit_on_paint_self</a> from edit.o(i.edit_on_paint_self) referenced from edit.o(.constdata)
 <LI><a href="#[a3]">edit_set_prop</a> from edit.o(i.edit_set_prop) referenced from edit.o(.constdata)
 <LI><a href="#[45]">edit_update_carent</a> from edit.o(i.edit_update_carent) referenced from edit.o(i.edit_on_event)
 <LI><a href="#[48]">font_bitmap_destroy</a> from font_bitmap.o(i.font_bitmap_destroy) referenced from font_bitmap.o(i.font_bitmap_init)
 <LI><a href="#[47]">font_bitmap_find_glyph</a> from font_bitmap.o(i.font_bitmap_find_glyph) referenced from font_bitmap.o(i.font_bitmap_init)
 <LI><a href="#[46]">font_bitmap_match</a> from font_bitmap.o(i.font_bitmap_match) referenced from font_bitmap.o(i.font_bitmap_init)
 <LI><a href="#[5d]">get_time_ms</a> from platform.o(i.get_time_ms) referenced from platform.o(i.platform_prepare)
 <LI><a href="#[a6]">group_box_on_paint_self</a> from group_box.o(i.group_box_on_paint_self) referenced from group_box.o(.constdata)
 <LI><a href="#[a7]">image_get_prop</a> from image.o(i.image_get_prop) referenced from image.o(.constdata)
 <LI><a href="#[a9]">image_on_paint_self</a> from image.o(i.image_on_paint_self) referenced from image.o(.constdata)
 <LI><a href="#[a8]">image_set_prop</a> from image.o(i.image_set_prop) referenced from image.o(.constdata)
 <LI><a href="#[aa]">label_on_paint_self</a> from label.o(i.label_on_paint_self) referenced from label.o(.constdata)
 <LI><a href="#[49]">lcd_mem_begin_frame</a> from lcd_mem_rgb565.o(i.lcd_mem_begin_frame) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[54]">lcd_mem_destroy</a> from lcd_mem_rgb565.o(i.lcd_mem_destroy) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[4e]">lcd_mem_draw_glyph</a> from lcd_mem_rgb565.o(i.lcd_mem_draw_glyph) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[4b]">lcd_mem_draw_hline</a> from lcd_mem_rgb565.o(i.lcd_mem_draw_hline) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[4d]">lcd_mem_draw_image</a> from lcd_mem_rgb565.o(i.lcd_mem_draw_image) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[4f]">lcd_mem_draw_points</a> from lcd_mem_rgb565.o(i.lcd_mem_draw_points) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[4a]">lcd_mem_draw_vline</a> from lcd_mem_rgb565.o(i.lcd_mem_draw_vline) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[53]">lcd_mem_end_frame</a> from lcd_mem_rgb565.o(i.lcd_mem_end_frame) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[4c]">lcd_mem_fill_rect</a> from lcd_mem_rgb565.o(i.lcd_mem_fill_rect) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[50]">lcd_mem_get_point_color</a> from lcd_mem_rgb565.o(i.lcd_mem_get_point_color) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[51]">lcd_mem_get_vgcanvas</a> from lcd_mem_rgb565.o(i.lcd_mem_get_vgcanvas) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[52]">lcd_mem_take_snapshot</a> from lcd_mem_rgb565.o(i.lcd_mem_take_snapshot) referenced from lcd_mem_rgb565.o(i.lcd_mem_create)
 <LI><a href="#[56]">main_loop_raw_destroy</a> from main_loop_rt1052_raw.o(i.main_loop_raw_destroy) referenced from main_loop_rt1052_raw.o(i.main_loop_init)
 <LI><a href="#[57]">main_loop_raw_dispatch</a> from main_loop_rt1052_raw.o(i.main_loop_raw_dispatch) referenced from main_loop_rt1052_raw.o(i.main_loop_init)
 <LI><a href="#[59]">main_loop_simple_queue_event</a> from main_loop_simple.o(i.main_loop_simple_queue_event) referenced from main_loop_simple.o(i.main_loop_simple_init)
 <LI><a href="#[58]">main_loop_simple_run</a> from main_loop_simple.o(i.main_loop_simple_run) referenced from main_loop_simple.o(i.main_loop_simple_init)
 <LI><a href="#[5b]">on_cancel</a> from demo_ui_app.o(i.on_cancel) referenced from demo_ui_app.o(i.on_show_dialog)
 <LI><a href="#[5c]">on_close</a> from demo_ui_app.o(i.on_close) referenced from demo_ui_app.o(i.on_show_window1)
 <LI><a href="#[5c]">on_close</a> from demo_ui_app.o(i.on_close) referenced from demo_ui_app.o(i.on_show_window2)
 <LI><a href="#[40]">on_dec</a> from demo_ui_app.o(i.on_dec) referenced from demo_ui_app.o(i.application_init)
 <LI><a href="#[3f]">on_inc</a> from demo_ui_app.o(i.on_inc) referenced from demo_ui_app.o(i.application_init)
 <LI><a href="#[5a]">on_ok</a> from demo_ui_app.o(i.on_ok) referenced from demo_ui_app.o(i.on_show_dialog)
 <LI><a href="#[41]">on_show_dialog</a> from demo_ui_app.o(i.on_show_dialog) referenced from demo_ui_app.o(i.application_init)
 <LI><a href="#[41]">on_show_dialog</a> from demo_ui_app.o(i.on_show_dialog) referenced from demo_ui_app.o(i.on_show_window1)
 <LI><a href="#[41]">on_show_dialog</a> from demo_ui_app.o(i.on_show_dialog) referenced from demo_ui_app.o(i.on_show_window2)
 <LI><a href="#[42]">on_show_window1</a> from demo_ui_app.o(i.on_show_window1) referenced from demo_ui_app.o(i.application_init)
 <LI><a href="#[43]">on_show_window2</a> from demo_ui_app.o(i.on_show_window2) referenced from demo_ui_app.o(i.application_init)
 <LI><a href="#[7b]">on_window_destroy</a> from window_manager.o(i.on_window_destroy) referenced from window_manager.o(i.window_manager_add_child)
 <LI><a href="#[ab]">progress_bar_get_prop</a> from progress_bar.o(i.progress_bar_get_prop) referenced from progress_bar.o(.constdata)
 <LI><a href="#[ae]">progress_bar_on_paint_self</a> from progress_bar.o(i.progress_bar_on_paint_self) referenced from progress_bar.o(.constdata)
 <LI><a href="#[ac]">progress_bar_set_prop</a> from progress_bar.o(i.progress_bar_set_prop) referenced from progress_bar.o(.constdata)
 <LI><a href="#[5f]">res_cmp_type</a> from resource_manager.o(i.res_cmp_type) referenced from resource_manager.o(i.resource_manager_clear_cache)
 <LI><a href="#[5e]">resource_info_unref</a> from resource_manager.o(i.resource_info_unref) referenced from resource_manager.o(i.resource_manager_clear_cache)
 <LI><a href="#[5e]">resource_info_unref</a> from resource_manager.o(i.resource_info_unref) referenced from resource_manager.o(i.resource_manager_unref)
 <LI><a href="#[b0]">slider_get_prop</a> from slider.o(i.slider_get_prop) referenced from slider.o(.constdata)
 <LI><a href="#[b3]">slider_on_event</a> from slider.o(i.slider_on_event) referenced from slider.o(.constdata)
 <LI><a href="#[b2]">slider_on_paint_self</a> from slider.o(i.slider_on_paint_self) referenced from slider.o(.constdata)
 <LI><a href="#[b1]">slider_set_prop</a> from slider.o(i.slider_set_prop) referenced from slider.o(.constdata)
 <LI><a href="#[55]">snapshot_destroy</a> from lcd_mem_rgb565.o(i.snapshot_destroy) referenced from lcd_mem_rgb565.o(i.lcd_mem_take_snapshot)
 <LI><a href="#[60]">time_now_ms</a> from time.o(i.time_now_ms) referenced from tk.o(i.tk_init_internal)
 <LI><a href="#[7d]">timer_enable_user_input</a> from window_manager.o(i.timer_enable_user_input) referenced from window_manager.o(i.window_manager_paint_animation)
 <LI><a href="#[65]">ui_builder_default_on_end</a> from ui_builder_default.o(i.ui_builder_default_on_end) referenced from ui_builder_default.o(i.ui_builder_default)
 <LI><a href="#[64]">ui_builder_default_on_widget_end</a> from ui_builder_default.o(i.ui_builder_default_on_widget_end) referenced from ui_builder_default.o(i.ui_builder_default)
 <LI><a href="#[62]">ui_builder_default_on_widget_prop</a> from ui_builder_default.o(i.ui_builder_default_on_widget_prop) referenced from ui_builder_default.o(i.ui_builder_default)
 <LI><a href="#[63]">ui_builder_default_on_widget_prop_end</a> from ui_builder_default.o(i.ui_builder_default_on_widget_prop_end) referenced from ui_builder_default.o(i.ui_builder_default)
 <LI><a href="#[61]">ui_builder_default_on_widget_start</a> from ui_builder_default.o(i.ui_builder_default_on_widget_start) referenced from ui_builder_default.o(i.ui_builder_default)
 <LI><a href="#[cd]">ui_loader_load_default</a> from ui_loader_default.o(i.ui_loader_load_default) referenced from ui_loader_default.o(.constdata)
 <LI><a href="#[c3]">widget_destroy_default</a> from widget_vtable.o(i.widget_destroy_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[c2]">widget_find_target_default</a> from widget_vtable.o(i.widget_find_target_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[b4]">widget_get_prop_default</a> from widget_vtable.o(i.widget_get_prop_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[c0]">widget_grab_default</a> from widget_vtable.o(i.widget_grab_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[be]">widget_invalidate_default</a> from widget_vtable.o(i.widget_invalidate_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[b6]">widget_on_click_default</a> from widget_vtable.o(i.widget_on_click_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[bf]">widget_on_event_default</a> from widget_vtable.o(i.widget_on_event_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[b8]">widget_on_keydown_default</a> from widget_vtable.o(i.widget_on_keydown_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[b7]">widget_on_keyup_default</a> from widget_vtable.o(i.widget_on_keyup_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[ad]">widget_on_paint_background_null</a> from widget_vtable.o(i.widget_on_paint_background_null) referenced 2 times from progress_bar.o(.constdata)
 <LI><a href="#[ba]">widget_on_paint_children_default</a> from widget_vtable.o(i.widget_on_paint_children_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[af]">widget_on_paint_done_null</a> from widget_vtable.o(i.widget_on_paint_done_null) referenced 2 times from progress_bar.o(.constdata)
 <LI><a href="#[b9]">widget_on_paint_self_default</a> from widget_vtable.o(i.widget_on_paint_self_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[bb]">widget_on_pointer_down_default</a> from widget_vtable.o(i.widget_on_pointer_down_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[bc]">widget_on_pointer_move_default</a> from widget_vtable.o(i.widget_on_pointer_move_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[bd]">widget_on_pointer_up_default</a> from widget_vtable.o(i.widget_on_pointer_up_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[b5]">widget_set_prop_default</a> from widget_vtable.o(i.widget_set_prop_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[c1]">widget_ungrab_default</a> from widget_vtable.o(i.widget_ungrab_default) referenced from widget_vtable.o(.constdata)
 <LI><a href="#[6b]">window_animator_begin_frame_overlap</a> from window_animator.o(i.window_animator_begin_frame_overlap) referenced from window_animator_fb.o(i.window_animator_create_bottom_to_top)
 <LI><a href="#[6b]">window_animator_begin_frame_overlap</a> from window_animator.o(i.window_animator_begin_frame_overlap) referenced from window_animator_fb.o(i.window_animator_create_fade)
 <LI><a href="#[6b]">window_animator_begin_frame_overlap</a> from window_animator.o(i.window_animator_begin_frame_overlap) referenced from window_animator_fb.o(i.window_animator_create_scale)
 <LI><a href="#[6b]">window_animator_begin_frame_overlap</a> from window_animator.o(i.window_animator_begin_frame_overlap) referenced from window_animator_fb.o(i.window_animator_create_top_to_bottom)
 <LI><a href="#[67]">window_animator_close_destroy</a> from window_animator_fb.o(i.window_animator_close_destroy) referenced from window_animator_fb.o(i.window_animator_create_bottom_to_top)
 <LI><a href="#[67]">window_animator_close_destroy</a> from window_animator_fb.o(i.window_animator_close_destroy) referenced from window_animator_fb.o(i.window_animator_create_fade)
 <LI><a href="#[67]">window_animator_close_destroy</a> from window_animator_fb.o(i.window_animator_close_destroy) referenced from window_animator_fb.o(i.window_animator_create_htranslate)
 <LI><a href="#[67]">window_animator_close_destroy</a> from window_animator_fb.o(i.window_animator_close_destroy) referenced from window_animator_fb.o(i.window_animator_create_scale)
 <LI><a href="#[67]">window_animator_close_destroy</a> from window_animator_fb.o(i.window_animator_close_destroy) referenced from window_animator_fb.o(i.window_animator_create_top_to_bottom)
 <LI><a href="#[67]">window_animator_close_destroy</a> from window_animator_fb.o(i.window_animator_close_destroy) referenced from window_animator_fb.o(i.window_animator_create_vtranslate)
 <LI><a href="#[6a]">window_animator_open_bottom_to_top_draw_curr</a> from window_animator_fb.o(i.window_animator_open_bottom_to_top_draw_curr) referenced from window_animator_fb.o(i.window_animator_create_bottom_to_top)
 <LI><a href="#[69]">window_animator_open_bottom_to_top_draw_prev</a> from window_animator_fb.o(i.window_animator_open_bottom_to_top_draw_prev) referenced from window_animator_fb.o(i.window_animator_create_bottom_to_top)
 <LI><a href="#[68]">window_animator_open_bottom_to_top_update_percent</a> from window_animator_fb.o(i.window_animator_open_bottom_to_top_update_percent) referenced from window_animator_fb.o(i.window_animator_create_bottom_to_top)
 <LI><a href="#[66]">window_animator_open_destroy</a> from window_animator_fb.o(i.window_animator_open_destroy) referenced from window_animator_fb.o(i.window_animator_create_bottom_to_top)
 <LI><a href="#[66]">window_animator_open_destroy</a> from window_animator_fb.o(i.window_animator_open_destroy) referenced from window_animator_fb.o(i.window_animator_create_fade)
 <LI><a href="#[66]">window_animator_open_destroy</a> from window_animator_fb.o(i.window_animator_open_destroy) referenced from window_animator_fb.o(i.window_animator_create_htranslate)
 <LI><a href="#[66]">window_animator_open_destroy</a> from window_animator_fb.o(i.window_animator_open_destroy) referenced from window_animator_fb.o(i.window_animator_create_scale)
 <LI><a href="#[66]">window_animator_open_destroy</a> from window_animator_fb.o(i.window_animator_open_destroy) referenced from window_animator_fb.o(i.window_animator_create_top_to_bottom)
 <LI><a href="#[66]">window_animator_open_destroy</a> from window_animator_fb.o(i.window_animator_open_destroy) referenced from window_animator_fb.o(i.window_animator_create_vtranslate)
 <LI><a href="#[6e]">window_animator_open_fade_draw_curr</a> from window_animator_fb.o(i.window_animator_open_fade_draw_curr) referenced from window_animator_fb.o(i.window_animator_create_fade)
 <LI><a href="#[6d]">window_animator_open_fade_draw_prev</a> from window_animator_fb.o(i.window_animator_open_fade_draw_prev) referenced from window_animator_fb.o(i.window_animator_create_fade)
 <LI><a href="#[6c]">window_animator_open_fade_update_percent</a> from window_animator_fb.o(i.window_animator_open_fade_update_percent) referenced from window_animator_fb.o(i.window_animator_create_fade)
 <LI><a href="#[71]">window_animator_open_htranslate_draw_curr</a> from window_animator_fb.o(i.window_animator_open_htranslate_draw_curr) referenced from window_animator_fb.o(i.window_animator_create_htranslate)
 <LI><a href="#[70]">window_animator_open_htranslate_draw_prev</a> from window_animator_fb.o(i.window_animator_open_htranslate_draw_prev) referenced from window_animator_fb.o(i.window_animator_create_htranslate)
 <LI><a href="#[6f]">window_animator_open_htranslate_update_percent</a> from window_animator_fb.o(i.window_animator_open_htranslate_update_percent) referenced from window_animator_fb.o(i.window_animator_create_htranslate)
 <LI><a href="#[74]">window_animator_open_scale_draw_curr</a> from window_animator_fb.o(i.window_animator_open_scale_draw_curr) referenced from window_animator_fb.o(i.window_animator_create_scale)
 <LI><a href="#[73]">window_animator_open_scale_draw_prev</a> from window_animator_fb.o(i.window_animator_open_scale_draw_prev) referenced from window_animator_fb.o(i.window_animator_create_scale)
 <LI><a href="#[72]">window_animator_open_scale_update_percent</a> from window_animator_fb.o(i.window_animator_open_scale_update_percent) referenced from window_animator_fb.o(i.window_animator_create_scale)
 <LI><a href="#[77]">window_animator_open_top_to_bottom_draw_curr</a> from window_animator_fb.o(i.window_animator_open_top_to_bottom_draw_curr) referenced from window_animator_fb.o(i.window_animator_create_top_to_bottom)
 <LI><a href="#[76]">window_animator_open_top_to_bottom_draw_prev</a> from window_animator_fb.o(i.window_animator_open_top_to_bottom_draw_prev) referenced from window_animator_fb.o(i.window_animator_create_top_to_bottom)
 <LI><a href="#[75]">window_animator_open_top_to_bottom_update_percent</a> from window_animator_fb.o(i.window_animator_open_top_to_bottom_update_percent) referenced from window_animator_fb.o(i.window_animator_create_top_to_bottom)
 <LI><a href="#[7a]">window_animator_open_vtranslate_draw_curr</a> from window_animator_fb.o(i.window_animator_open_vtranslate_draw_curr) referenced from window_animator_fb.o(i.window_animator_create_vtranslate)
 <LI><a href="#[79]">window_animator_open_vtranslate_draw_prev</a> from window_animator_fb.o(i.window_animator_open_vtranslate_draw_prev) referenced from window_animator_fb.o(i.window_animator_create_vtranslate)
 <LI><a href="#[78]">window_animator_open_vtranslate_update_percent</a> from window_animator_fb.o(i.window_animator_open_vtranslate_update_percent) referenced from window_animator_fb.o(i.window_animator_create_vtranslate)
 <LI><a href="#[c7]">window_destroy</a> from window.o(i.window_destroy) referenced from window.o(.constdata)
 <LI><a href="#[c4]">window_get_prop</a> from window.o(i.window_get_prop) referenced from window.o(.constdata)
 <LI><a href="#[7c]">window_manager_check_if_need_open_animation</a> from window_manager.o(i.window_manager_check_if_need_open_animation) referenced from window_manager.o(i.window_manager_add_child)
 <LI><a href="#[cc]">window_manager_find_target</a> from window_manager.o(i.window_manager_find_target) referenced from window_manager.o(.constdata)
 <LI><a href="#[ca]">window_manager_grab</a> from window_manager.o(i.window_manager_grab) referenced from window_manager.o(.constdata)
 <LI><a href="#[7e]">window_manager_idle_destroy_window</a> from window_manager.o(i.window_manager_idle_destroy_window) referenced from window_manager.o(i.window_manager_remove_child)
 <LI><a href="#[c9]">window_manager_invalidate</a> from window_manager.o(i.window_manager_invalidate) referenced from window_manager.o(.constdata)
 <LI><a href="#[c8]">window_manager_on_paint_children</a> from window_manager.o(i.window_manager_on_paint_children) referenced from window_manager.o(.constdata)
 <LI><a href="#[cb]">window_manager_ungrab</a> from window_manager.o(i.window_manager_ungrab) referenced from window_manager.o(.constdata)
 <LI><a href="#[c6]">window_on_paint_self</a> from window.o(i.window_on_paint_self) referenced from window.o(.constdata)
 <LI><a href="#[c5]">window_set_prop</a> from window.o(i.window_set_prop) referenced from window.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[178]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[179]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[17b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[3fe]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3ff]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[17c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[400]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[190]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[17d]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[401]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[183]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[402]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[403]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[17f]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[404]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[405]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[406]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[407]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[181]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[408]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[409]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[40a]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[40b]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[40c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[40d]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[40e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[40f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[410]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[411]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[412]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[413]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[414]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[415]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[416]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[188]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[417]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[418]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[419]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[41a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[41b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[41c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[41d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[17a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[41e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[41f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[182]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[420]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[184]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[421]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[1a1]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[187]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[422]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[189]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[18b]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_key_down
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[1d4]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[423]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>__2snprintf</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, noretval__2snprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
</UL>

<P><STRONG><a name="[18f]"></a>__printf</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[19d]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[191]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_layout_parser
</UL>

<P><STRONG><a name="[28b]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_layout_parser
</UL>

<P><STRONG><a name="[378]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
</UL>

<P><STRONG><a name="[1fc]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set_utf8
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_str
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_read_string
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set_with_len
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
</UL>

<P><STRONG><a name="[30f]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_read_binary
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_realloc
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_take_snapshot
</UL>

<P><STRONG><a name="[194]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[424]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_send
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_recv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_on_event
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_parsed_self_layout_params
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_lookup
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_add
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_image
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_stat
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ELCDIF_Init
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_post_pointer_event
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[425]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[426]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[427]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[199]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[196]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[428]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_lcd_init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_Init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_touch_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_create
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_init
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_deinit
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_image
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_dispatch
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_info_destroy
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_stat
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_take_snapshot
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_destroy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWTK_Touch_Init
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_reset
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_init
</UL>

<P><STRONG><a name="[429]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[42a]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[198]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_add
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set_with_len
</UL>

<P><STRONG><a name="[286]"></a>strcmp</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, strcmpv7m_pel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_get_prop
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_set_prop
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_get_prop
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_bool
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_prop
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_get_prop
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_lookup
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_prop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_get_prop
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_eq
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_prop
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_prop
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_find_in_cache
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_prop
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_get_prop
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_set_prop
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_get_prop
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_prop
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_bitmap_match
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[180]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[192]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[42b]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[42c]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[19a]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[19b]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[18d]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>

<P><STRONG><a name="[18e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>

<P><STRONG><a name="[a]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> noretval__2snprintf.o(.text)
</UL>
<P><STRONG><a name="[19c]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[19e]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[17e]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[193]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[19f]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[42d]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[42e]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[42f]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[1a0]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[186]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[18a]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[cf]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d1]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d8]"></a>DMA0_DMA16_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d9]"></a>DMA1_DMA17_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>DMA2_DMA18_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[db]"></a>DMA3_DMA19_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[dc]"></a>DMA4_DMA20_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>DMA5_DMA21_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[de]"></a>DMA6_DMA22_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[df]"></a>DMA7_DMA23_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e0]"></a>DMA8_DMA24_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e1]"></a>DMA9_DMA25_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e2]"></a>DMA10_DMA26_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>DMA11_DMA27_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e4]"></a>DMA12_DMA28_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e5]"></a>DMA13_DMA29_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e6]"></a>DMA14_DMA30_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e7]"></a>DMA15_DMA31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e8]"></a>DMA_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[ed]"></a>LPUART2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[ee]"></a>LPUART3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[ef]"></a>LPUART4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f0]"></a>LPUART5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f1]"></a>LPUART6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f2]"></a>LPUART7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f3]"></a>LPUART8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f4]"></a>LPI2C1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f5]"></a>LPI2C2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f6]"></a>LPI2C3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f7]"></a>LPI2C4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f8]"></a>LPSPI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f9]"></a>LPSPI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[fa]"></a>LPSPI3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[fb]"></a>LPSPI4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[fc]"></a>CAN1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[fd]"></a>CAN2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[110]"></a>SAI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[111]"></a>SAI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[112]"></a>SAI3_RX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[113]"></a>SAI3_TX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[114]"></a>SPDIF_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[132]"></a>FLEXIO1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[133]"></a>FLEXIO2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[144]"></a>FLEXSPI_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[146]"></a>USDHC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[147]"></a>USDHC2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[14a]"></a>ENET_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[14b]"></a>ENET_1588_Timer_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[153]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[154]"></a>ACMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[155]"></a>ACMP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[156]"></a>ACMP4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[11b]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[11c]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[151]"></a>ADC_ETC_ERROR_IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[14e]"></a>ADC_ETC_IRQ0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[14f]"></a>ADC_ETC_IRQ1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[150]"></a>ADC_ETC_IRQ2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[115]"></a>ANATOP_EVENT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[116]"></a>ANATOP_EVENT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[117]"></a>ANATOP_TAMP_LOW_HIGH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[118]"></a>ANATOP_TEMP_PANIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[10f]"></a>BEE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CAN1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[2e]"></a>CAN2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[137]"></a>CCM_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[138]"></a>CCM_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>CORE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[103]"></a>CSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[109]"></a>CSU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e9]"></a>CTI0_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[ea]"></a>CTI1_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[11d]"></a>DCDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[10a]"></a>DCP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[10b]"></a>DCP_VMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA0_DMA16_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[16]"></a>DMA10_DMA26_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[17]"></a>DMA11_DMA27_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[18]"></a>DMA12_DMA28_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[19]"></a>DMA13_DMA29_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[1a]"></a>DMA14_DMA30_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[1b]"></a>DMA15_DMA31_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[d]"></a>DMA1_DMA17_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[e]"></a>DMA2_DMA18_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[f]"></a>DMA3_DMA19_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[10]"></a>DMA4_DMA20_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[11]"></a>DMA5_DMA21_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[12]"></a>DMA6_DMA22_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[13]"></a>DMA7_DMA23_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[14]"></a>DMA8_DMA24_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[15]"></a>DMA9_DMA25_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[1c]"></a>DMA_ERROR_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[3b]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
<LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[159]"></a>ENC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[15a]"></a>ENC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[15b]"></a>ENC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[15c]"></a>ENC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>ENET_1588_Timer_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[39]"></a>ENET_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[136]"></a>EWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>FLEXIO1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[35]"></a>FLEXIO2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[fe]"></a>FLEXRAM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>FLEXSPI_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[139]"></a>GPC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[128]"></a>GPIO1_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[129]"></a>GPIO1_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[120]"></a>GPIO1_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>GPIO1_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[122]"></a>GPIO1_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[123]"></a>GPIO1_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[124]"></a>GPIO1_INT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[125]"></a>GPIO1_INT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>GPIO1_INT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[127]"></a>GPIO1_INT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[12a]"></a>GPIO2_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[12b]"></a>GPIO2_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[12c]"></a>GPIO3_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[12d]"></a>GPIO3_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[12e]"></a>GPIO4_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[12f]"></a>GPIO4_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[130]"></a>GPIO5_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[131]"></a>GPIO5_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[101]"></a>GPR_IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[13c]"></a>GPT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[13d]"></a>GPT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[ff]"></a>KPP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>LPI2C4_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[29]"></a>LPSPI1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[2a]"></a>LPSPI2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[2b]"></a>LPSPI3_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[2c]"></a>LPSPI4_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[177]"></a>NMI_WAKEUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[152]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[13e]"></a>PWM1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[13f]"></a>PWM1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[140]"></a>PWM1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[141]"></a>PWM1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[142]"></a>PWM1_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[161]"></a>PWM2_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[162]"></a>PWM2_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[163]"></a>PWM2_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[164]"></a>PWM2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[165]"></a>PWM2_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[166]"></a>PWM3_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[167]"></a>PWM3_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[168]"></a>PWM3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[169]"></a>PWM3_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[16a]"></a>PWM3_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[16b]"></a>PWM4_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[16c]"></a>PWM4_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[16d]"></a>PWM4_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[16e]"></a>PWM4_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[16f]"></a>PWM4_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[104]"></a>PXP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[135]"></a>RTWDOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[13b]"></a>Reserved115_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[143]"></a>Reserved123_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[157]"></a>Reserved143_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[158]"></a>Reserved144_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[170]"></a>Reserved168_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[171]"></a>Reserved169_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[172]"></a>Reserved170_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[173]"></a>Reserved171_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[174]"></a>Reserved172_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[175]"></a>Reserved173_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[10c]"></a>Reserved68_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[11e]"></a>Reserved86_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[11f]"></a>Reserved87_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SAI1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[30]"></a>SAI2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[31]"></a>SAI3_RX_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[32]"></a>SAI3_TX_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[145]"></a>SEMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[176]"></a>SJC_ARM_DEBUG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[10e]"></a>SJC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[106]"></a>SNVS_HP_WRAPPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[107]"></a>SNVS_HP_WRAPPER_TZ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[108]"></a>SNVS_LP_WRAPPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPDIF_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[13a]"></a>SRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[15d]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[15e]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[15f]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[160]"></a>TMR4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[10d]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[100]"></a>TSC_DIG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[149]"></a>USB_OTG1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[148]"></a>USB_OTG2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[119]"></a>USB_PHY1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[11a]"></a>USB_PHY2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USDHC1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[38]"></a>USDHC2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[134]"></a>WDOG1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>WDOG2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[14c]"></a>XBAR1_IRQ_0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[14d]"></a>XBAR1_IRQ_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(OTHER_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>Reset_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_mimxrt1052.o(RES_HANDLER))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1a2]"></a>APP_ELCDIF_Init</STRONG> (Thumb, 26 bytes, Stack size 32 bytes, lcd_support.o(i.APP_ELCDIF_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_lcd_init
</UL>

<P><STRONG><a name="[1e6]"></a>APP_LCDIF_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lcd_support.o(i.APP_LCDIF_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDIF_IRQHandler
</UL>

<P><STRONG><a name="[1aa]"></a>BOARD_BootClockRUN</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, clock_config.o(i.BOARD_BootClockRUN))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BOARD_BootClockRUN &rArr; SystemCoreClockUpdate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitUsb1Pll
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitSysPll
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitArmPll
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitVideoPll
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitUsb2Pll
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitEnetPll
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitAudioPll
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetMux
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetDiv
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockGate
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b6]"></a>BOARD_ConfigMPU</STRONG> (Thumb, 358 bytes, Stack size 8 bytes, board.o(i.BOARD_ConfigMPU))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BOARD_ConfigMPU &rArr; SCB_EnableDCache
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_EnableICache
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_EnableDCache
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_DisableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ba]"></a>BOARD_DebugConsoleSrcFreq</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, board.o(i.BOARD_DebugConsoleSrcFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BOARD_DebugConsoleSrcFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[224]"></a>BOARD_EnableLcdInterrupt</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lcd_support.o(i.BOARD_EnableLcdInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_lcd_init
</UL>

<P><STRONG><a name="[1bd]"></a>BOARD_InitDebugConsole</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, board.o(i.BOARD_InitDebugConsole))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; LOG_Init &rArr; IO_Init &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bf]"></a>BOARD_InitI2C1Pins</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, pin_mux.o(i.BOARD_InitI2C1Pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BOARD_InitI2C1Pins &rArr; IOMUXC_SetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinMux
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinConfig
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c3]"></a>BOARD_InitLcd</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lcd_support.o(i.BOARD_InitLcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = BOARD_InitLcd &rArr; GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c6]"></a>BOARD_InitLcdifPixelClock</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lcd_support.o(i.BOARD_InitLcdifPixelClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BOARD_InitLcdifPixelClock &rArr; CLOCK_SetMux
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitVideoPll
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetMux
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ca]"></a>BOARD_InitPins</STRONG> (Thumb, 1174 bytes, Stack size 16 bytes, pin_mux.o(i.BOARD_InitPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BOARD_InitPins &rArr; IOMUXC_SetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinMux
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinConfig
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cb]"></a>BOARD_InitSemcPins</STRONG> (Thumb, 996 bytes, Stack size 16 bytes, pin_mux.o(i.BOARD_InitSemcPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BOARD_InitSemcPins &rArr; IOMUXC_SetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinMux
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinConfig
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b1]"></a>CLOCK_DeinitAudioPll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_DeinitAudioPll))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1b3]"></a>CLOCK_DeinitEnetPll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_DeinitEnetPll))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1b4]"></a>CLOCK_DeinitUsb2Pll</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_DeinitUsb2Pll))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1b2]"></a>CLOCK_DeinitVideoPll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_DeinitVideoPll))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1a7]"></a>CLOCK_GetFreq</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_GetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = CLOCK_GetFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetOscFreq
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_touch_init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWTK_Touch_Init
</UL>

<P><STRONG><a name="[1bb]"></a>CLOCK_GetPllFreq</STRONG> (Thumb, 556 bytes, Stack size 48 bytes, fsl_clock.o(i.CLOCK_GetPllFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetOscFreq
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
</UL>

<P><STRONG><a name="[1d2]"></a>CLOCK_GetSysPfdFreq</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_GetSysPfdFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[1d1]"></a>CLOCK_GetUsb1PfdFreq</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_GetUsb1PfdFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CLOCK_GetUsb1PfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[1ac]"></a>CLOCK_InitArmPll</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_InitArmPll))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1ad]"></a>CLOCK_InitSysPll</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_InitSysPll))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1ae]"></a>CLOCK_InitUsb1Pll</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_InitUsb1Pll))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1c7]"></a>CLOCK_InitVideoPll</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_InitVideoPll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_InitVideoPll
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcdifPixelClock
</UL>

<P><STRONG><a name="[1be]"></a>DbgConsole_Init</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, fsl_debug_console.o(i.DbgConsole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DbgConsole_Init &rArr; LOG_Init &rArr; IO_Init &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[1d6]"></a>DbgConsole_Printf</STRONG> (Thumb, 60 bytes, Stack size 160 bytes, fsl_debug_console.o(i.DbgConsole_Printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1da]"></a>ELCDIF_Reset</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, fsl_elcdif.o(i.ELCDIF_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ELCDIF_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>

<P><STRONG><a name="[1a3]"></a>ELCDIF_RgbModeInit</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, fsl_elcdif.o(i.ELCDIF_RgbModeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_Reset
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_GetInstance
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ELCDIF_Init
</UL>

<P><STRONG><a name="[1db]"></a>FT5406_RT_GetSingleTouch</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, fsl_ft5406_rt.o(i.FT5406_RT_GetSingleTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FT5406_RT_GetSingleTouch &rArr; FT5406_RT_ReadTouchData &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_ReadTouchData
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disaptch_input
</UL>

<P><STRONG><a name="[1a9]"></a>FT5406_RT_Init</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, fsl_ft5406_rt.o(i.FT5406_RT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_touch_init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWTK_Touch_Init
</UL>

<P><STRONG><a name="[1dc]"></a>FT5406_RT_ReadTouchData</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fsl_ft5406_rt.o(i.FT5406_RT_ReadTouchData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FT5406_RT_ReadTouchData &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_GetSingleTouch
</UL>

<P><STRONG><a name="[1c4]"></a>GPIO_PinInit</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, fsl_gpio.o(i.GPIO_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinSetInterruptConfig
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcd
</UL>

<P><STRONG><a name="[1df]"></a>GPIO_PinSetInterruptConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, fsl_gpio.o(i.GPIO_PinSetInterruptConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinSetInterruptConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>

<P><STRONG><a name="[1c5]"></a>GPIO_PinWrite</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, fsl_gpio.o(i.GPIO_PinWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>

<P><STRONG><a name="[1e0]"></a>IO_Init</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, fsl_io.o(i.IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = IO_Init &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Init
</UL>

<P><STRONG><a name="[1e3]"></a>IO_Transfer</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, fsl_io.o(i.IO_Transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_WriteBlocking
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ReadBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Pop
</UL>

<P><STRONG><a name="[102]"></a>LCDIF_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, lcd_support.o(i.LCDIF_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCDIF_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_LCDIF_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1d5]"></a>LOG_Init</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, fsl_log.o(i.LOG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LOG_Init &rArr; IO_Init &rArr; LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[1e7]"></a>LOG_Pop</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, fsl_log.o(i.LOG_Pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LOG_Pop &rArr; IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
</UL>

<P><STRONG><a name="[1d8]"></a>LOG_Push</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, fsl_log.o(i.LOG_Push))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LOG_Push &rArr; LOG_Pop &rArr; IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Pop
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_RelocateLog
</UL>

<P><STRONG><a name="[25]"></a>LPI2C1_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fsl_lpi2c.o(i.LPI2C1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPI2C1_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[26]"></a>LPI2C2_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fsl_lpi2c.o(i.LPI2C2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPI2C2_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[27]"></a>LPI2C3_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fsl_lpi2c.o(i.LPI2C3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPI2C3_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[1e9]"></a>LPI2C_CheckForBusyBus</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, fsl_lpi2c.o(i.LPI2C_CheckForBusyBus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C_CheckForBusyBus
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>

<P><STRONG><a name="[1ed]"></a>LPI2C_GetInstance</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[1eb]"></a>LPI2C_MasterCheckAndClearError</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, fsl_lpi2c.o(i.LPI2C_MasterCheckAndClearError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterClearStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterReceive
</UL>

<P><STRONG><a name="[1a6]"></a>LPI2C_MasterGetDefaultConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_MasterGetDefaultConfig))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_touch_init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWTK_Touch_Init
</UL>

<P><STRONG><a name="[1a8]"></a>LPI2C_MasterInit</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, fsl_lpi2c.o(i.LPI2C_MasterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LPI2C_MasterInit &rArr; LPI2C_MasterSetBaudRate
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterReset
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterEnable
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetCyclesForWidth
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSetBaudRate
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_touch_init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWTK_Touch_Init
</UL>

<P><STRONG><a name="[1f2]"></a>LPI2C_MasterReceive</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, fsl_lpi2c.o(i.LPI2C_MasterReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetStatusFlags
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>

<P><STRONG><a name="[1f4]"></a>LPI2C_MasterSend</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, fsl_lpi2c.o(i.LPI2C_MasterSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LPI2C_MasterSend &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>

<P><STRONG><a name="[1ef]"></a>LPI2C_MasterSetBaudRate</STRONG> (Thumb, 286 bytes, Stack size 64 bytes, fsl_lpi2c.o(i.LPI2C_MasterSetBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LPI2C_MasterSetBaudRate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[1f5]"></a>LPI2C_MasterStop</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, fsl_lpi2c.o(i.LPI2C_MasterStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPI2C_MasterStop &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetStatusFlags
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterClearStatusFlags
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
</UL>

<P><STRONG><a name="[1dd]"></a>LPI2C_MasterTransferBlocking</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, fsl_lpi2c.o(i.LPI2C_MasterTransferBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterClearStatusFlags
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSend
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterReceive
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CheckForBusyBus
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_ReadTouchData
</UL>

<P><STRONG><a name="[1d]"></a>LPUART1_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART1_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[1e]"></a>LPUART2_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART2_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[1f]"></a>LPUART3_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART3_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[20]"></a>LPUART4_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART4_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[21]"></a>LPUART5_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART5_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[22]"></a>LPUART6_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART6_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART6_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[23]"></a>LPUART7_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART7_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[24]"></a>LPUART8_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART8_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART8_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(OTHER_HANDLER)
</UL>
<P><STRONG><a name="[1f7]"></a>LPUART_ClearStatusFlags</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, fsl_lpuart.o(i.LPUART_ClearStatusFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ReadBlocking
</UL>

<P><STRONG><a name="[1e1]"></a>LPUART_GetDefaultConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART_GetDefaultConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
</UL>

<P><STRONG><a name="[1f9]"></a>LPUART_GetInstance</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[1f8]"></a>LPUART_GetStatusFlags</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART_GetStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ReadBlocking
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ClearStatusFlags
</UL>

<P><STRONG><a name="[1e2]"></a>LPUART_Init</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, fsl_lpuart.o(i.LPUART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LPUART_Init &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetInstance
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
</UL>

<P><STRONG><a name="[1e5]"></a>LPUART_ReadBlocking</STRONG> (Thumb, 194 bytes, Stack size 28 bytes, fsl_lpuart.o(i.LPUART_ReadBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetStatusFlags
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ClearStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>

<P><STRONG><a name="[1e4]"></a>LPUART_WriteBlocking</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART_WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART_WriteBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>

<P><STRONG><a name="[1d7]"></a>StrFormatPrintf</STRONG> (Thumb, 558 bytes, Stack size 120 bytes, fsl_str.o(i.StrFormatPrintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = StrFormatPrintf &rArr; ConvertRadixNumToString
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertRadixNumToString
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[d7]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, platform.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1b5]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, system_mimxrt1052.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[3c]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_mimxrt1052.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SCB_EnableDCache
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_EnableICache
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_EnableDCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RES_HANDLER)
</UL>
<P><STRONG><a name="[20b]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1ff]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 828 bytes, Stack size 128 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[208]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[209]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[20a]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[20d]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[20f]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[210]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[211]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[212]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[20c]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[213]"></a>application_init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, demo_ui_app.o(i.application_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = application_init &rArr; widget_child_on &rArr; widget_on &rArr; emitter_on &rArr; emitter_extends &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_child_on
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_start
</UL>

<P><STRONG><a name="[217]"></a>array_create</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, array.o(i.array_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = array_create &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_add_child
</UL>

<P><STRONG><a name="[21b]"></a>array_deinit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, array.o(i.array_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_deinit
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_destroy
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_deinit
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_deinit
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_deinit
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_deinit
</UL>

<P><STRONG><a name="[21c]"></a>array_destroy</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, array.o(i.array_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = array_destroy &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
</UL>

<P><STRONG><a name="[21f]"></a>array_find</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, array.o(i.array_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = array_find &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_find_index
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_window_destroy
</UL>

<P><STRONG><a name="[220]"></a>array_find_index</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, array.o(i.array_find_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = array_find_index
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_remove
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_find
</UL>

<P><STRONG><a name="[219]"></a>array_init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, array.o(i.array_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_create
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_init
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_init
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_init
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
</UL>

<P><STRONG><a name="[2ef]"></a>array_pop</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, array.o(i.array_pop))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_dispatch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_dispatch
</UL>

<P><STRONG><a name="[221]"></a>array_push</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, array.o(i.array_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_extend
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_add
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_add
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_dispatch
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_add
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_dispatch
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_add
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_add
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_grab
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_add_child
</UL>

<P><STRONG><a name="[222]"></a>array_remove</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, array.o(i.array_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_find_index
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_unref
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_remove_child
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_ungrab
</UL>

<P><STRONG><a name="[343]"></a>array_remove_all</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, array.o(i.array_remove_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = array_remove_all
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_clear_cache
</UL>

<P><STRONG><a name="[223]"></a>awtk_lcd_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lcd_support.o(i.awtk_lcd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = awtk_lcd_init &rArr; APP_ELCDIF_Init &rArr; ELCDIF_RgbModeInit &rArr; CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_EnableLcdInterrupt
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ELCDIF_Init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227]"></a>bitmap_destroy</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bitmap.o(i.bitmap_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bitmap_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_cache_destroy
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_destroy
</UL>

<P><STRONG><a name="[228]"></a>blend_image_565_565</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, blend_image_565_565.o(i.blend_image_565_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = blend_image_565_565 &rArr; blend_image_with_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_without_alpha
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_with_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_blend_image
</UL>

<P><STRONG><a name="[22b]"></a>blend_image_565_8888</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, blend_image_565_8888.o(i.blend_image_565_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = blend_image_565_8888 &rArr; blend_image_without_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_without_alpha
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_with_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_blend_image
</UL>

<P><STRONG><a name="[22e]"></a>blend_image_8888_565</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, blend_image_8888_565.o(i.blend_image_8888_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = blend_image_8888_565 &rArr; blend_image_with_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_without_alpha
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_with_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_blend_image
</UL>

<P><STRONG><a name="[231]"></a>blend_image_8888_8888</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, blend_image_8888_8888.o(i.blend_image_8888_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = blend_image_8888_8888 &rArr; blend_image_without_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_without_alpha
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_with_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_blend_image
</UL>

<P><STRONG><a name="[23b]"></a>button_create</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, button.o(i.button_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = button_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[241]"></a>canvas_begin_frame</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, canvas.o(i.canvas_begin_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = canvas_begin_frame &rArr; canvas_set_clip_rect &rArr; lcd_set_clip_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_begin_frame
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_clip_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_update
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_begin_frame_overlap
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_normal
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_prepare
</UL>

<P><STRONG><a name="[24a]"></a>canvas_draw_icon</STRONG> (Thumb, 236 bytes, Stack size 88 bytes, canvas.o(i.canvas_draw_icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_center
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
</UL>

<P><STRONG><a name="[250]"></a>canvas_draw_image</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, canvas.o(i.canvas_draw_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_do_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_w
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_h
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_repeat_y
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_repeat_x
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_repeat
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_9patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_y_scale_x
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_y
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_x_scale_y
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_x
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_icon
</UL>

<P><STRONG><a name="[251]"></a>canvas_draw_image_3patch_x</STRONG> (Thumb, 228 bytes, Stack size 80 bytes, canvas.o(i.canvas_draw_image_3patch_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = canvas_draw_image_3patch_x &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_untranslate
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_translate
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[254]"></a>canvas_draw_image_3patch_x_scale_y</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, canvas.o(i.canvas_draw_image_3patch_x_scale_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = canvas_draw_image_3patch_x_scale_y &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_untranslate
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_translate
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[255]"></a>canvas_draw_image_3patch_y</STRONG> (Thumb, 230 bytes, Stack size 80 bytes, canvas.o(i.canvas_draw_image_3patch_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = canvas_draw_image_3patch_y &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_untranslate
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_translate
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[256]"></a>canvas_draw_image_3patch_y_scale_x</STRONG> (Thumb, 220 bytes, Stack size 72 bytes, canvas.o(i.canvas_draw_image_3patch_y_scale_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = canvas_draw_image_3patch_y_scale_x &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_untranslate
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_translate
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[257]"></a>canvas_draw_image_9patch</STRONG> (Thumb, 528 bytes, Stack size 96 bytes, canvas.o(i.canvas_draw_image_9patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = canvas_draw_image_9patch &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_untranslate
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_translate
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[258]"></a>canvas_draw_image_center</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, canvas.o(i.canvas_draw_image_center))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_icon
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[259]"></a>canvas_draw_image_ex</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, canvas.o(i.canvas_draw_image_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_w
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_h
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_repeat_y
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_repeat_x
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_repeat
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_center
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_9patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_y_scale_x
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_y
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_x_scale_y
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_x
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_on_paint_self
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>

<P><STRONG><a name="[25d]"></a>canvas_draw_image_repeat</STRONG> (Thumb, 166 bytes, Stack size 64 bytes, canvas.o(i.canvas_draw_image_repeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = canvas_draw_image_repeat &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[25e]"></a>canvas_draw_image_repeat_x</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, canvas.o(i.canvas_draw_image_repeat_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = canvas_draw_image_repeat_x &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[25f]"></a>canvas_draw_image_repeat_y</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, canvas.o(i.canvas_draw_image_repeat_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = canvas_draw_image_repeat_y &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[25a]"></a>canvas_draw_image_scale</STRONG> (Thumb, 198 bytes, Stack size 72 bytes, canvas.o(i.canvas_draw_image_scale))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = canvas_draw_image_scale &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[25c]"></a>canvas_draw_image_scale_h</STRONG> (Thumb, 226 bytes, Stack size 80 bytes, canvas.o(i.canvas_draw_image_scale_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = canvas_draw_image_scale_h &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[25b]"></a>canvas_draw_image_scale_w</STRONG> (Thumb, 226 bytes, Stack size 80 bytes, canvas.o(i.canvas_draw_image_scale_w))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = canvas_draw_image_scale_w &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>

<P><STRONG><a name="[262]"></a>canvas_draw_text</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, canvas.o(i.canvas_draw_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = canvas_draw_text &rArr; canvas_draw_text_impl &rArr; canvas_draw_glyph &rArr; lcd_draw_glyph
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_text
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_text_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
</UL>

<P><STRONG><a name="[267]"></a>canvas_draw_vline</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, canvas.o(i.canvas_draw_vline))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = canvas_draw_vline &rArr; canvas_draw_vline_impl &rArr; lcd_draw_vline
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_vline_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
</UL>

<P><STRONG><a name="[26a]"></a>canvas_end_frame</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, canvas.o(i.canvas_end_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = canvas_end_frame &rArr; lcd_end_frame
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_end_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_update
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_normal
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_prepare
</UL>

<P><STRONG><a name="[26c]"></a>canvas_fill_rect</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, canvas.o(i.canvas_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = canvas_fill_rect &rArr; canvas_fill_rect_impl &rArr; lcd_fill_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_fill_rect_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_on_paint_self
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>

<P><STRONG><a name="[26f]"></a>canvas_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, canvas.o(i.canvas_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = canvas_init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_raw_init_canvas
</UL>

<P><STRONG><a name="[270]"></a>canvas_measure_text</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, canvas.o(i.canvas_measure_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = canvas_measure_text &rArr; canvas_measure_text_default &rArr; font_find_glyph
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_measure_text
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_measure_text_default
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
</UL>

<P><STRONG><a name="[242]"></a>canvas_set_clip_rect</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, canvas.o(i.canvas_set_clip_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = canvas_set_clip_rect &rArr; lcd_set_clip_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_clip_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_begin_frame
</UL>

<P><STRONG><a name="[274]"></a>canvas_set_fill_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, canvas.o(i.canvas_set_fill_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = canvas_set_fill_color &rArr; lcd_set_fill_color
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_fill_color
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_on_paint_self
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>

<P><STRONG><a name="[276]"></a>canvas_set_font</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, canvas.o(i.canvas_set_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = canvas_set_font &rArr; font_manager_find &rArr; font_match
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_font_size
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_font_name
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_find
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
</UL>

<P><STRONG><a name="[27a]"></a>canvas_set_global_alpha</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, canvas.o(i.canvas_set_global_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = canvas_set_global_alpha &rArr; lcd_set_global_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_global_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint
</UL>

<P><STRONG><a name="[27c]"></a>canvas_set_stroke_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, canvas.o(i.canvas_set_stroke_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = canvas_set_stroke_color &rArr; lcd_set_stroke_color
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_stroke_color
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_border
</UL>

<P><STRONG><a name="[27e]"></a>canvas_set_text_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, canvas.o(i.canvas_set_text_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = canvas_set_text_color &rArr; lcd_set_text_color
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_text_color
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
</UL>

<P><STRONG><a name="[280]"></a>canvas_stroke_rect</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, canvas.o(i.canvas_stroke_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = canvas_stroke_rect &rArr; canvas_stroke_rect_impl &rArr; canvas_draw_vline_impl &rArr; lcd_draw_vline
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_stroke_rect_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_border
</UL>

<P><STRONG><a name="[252]"></a>canvas_translate</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, canvas.o(i.canvas_translate))
<BR><BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_9patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_y_scale_x
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_y
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_x_scale_y
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_x
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>

<P><STRONG><a name="[253]"></a>canvas_untranslate</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, canvas.o(i.canvas_untranslate))
<BR><BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_9patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_y_scale_x
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_y
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_x_scale_y
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_3patch_x
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>

<P><STRONG><a name="[283]"></a>check_button_create</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, check_button.o(i.check_button_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = check_button_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_value_only
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create_radio
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[285]"></a>check_button_create_radio</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, check_button.o(i.check_button_create_radio))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = check_button_create_radio &rArr; check_button_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_value_only
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[288]"></a>check_button_set_value</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, check_button.o(i.check_button_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = check_button_set_value &rArr; check_button_set_value_only &rArr; widget_set_state &rArr; widget_update_style &rArr; theme_find_style
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_value_only
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_prop
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_on_event
</UL>

<P><STRONG><a name="[28a]"></a>children_layout_parser</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, layout.o(i.children_layout_parser))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = children_layout_parser &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_prop
</UL>

<P><STRONG><a name="[2bf]"></a>color_init</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, color.o(i.color_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = color_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_on_paint_self
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_border
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>

<P><STRONG><a name="[28c]"></a>cos</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_out
</UL>

<P><STRONG><a name="[3d5]"></a>default_ui_loader</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ui_loader_default.o(i.default_ui_loader))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>

<P><STRONG><a name="[34b]"></a>delay_ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, platform.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_ms
</UL>

<P><STRONG><a name="[28d]"></a>dialog_client_create</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, dialog.o(i.dialog_client_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = dialog_client_create &rArr; group_box_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_update_style
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_name
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;group_box_create
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
</UL>

<P><STRONG><a name="[293]"></a>dialog_create</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, dialog.o(i.dialog_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dialog_create &rArr; dialog_title_create &rArr; label_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_add_child
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_title_create
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_client_create
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_on_relayout_children
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[29c]"></a>dialog_modal</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, dialog.o(i.dialog_modal))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = dialog_modal &rArr; idle_add &rArr; idle_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_run
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_add
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_show_dialog
</UL>

<P><STRONG><a name="[2a2]"></a>dialog_quit</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, dialog.o(i.dialog_quit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dialog_quit &rArr; main_loop_quit
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_quit
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ok
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cancel
</UL>

<P><STRONG><a name="[297]"></a>dialog_title_create</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, dialog.o(i.dialog_title_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = dialog_title_create &rArr; label_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_update_style
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_name
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_create
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
</UL>

<P><STRONG><a name="[3c4]"></a>easing_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, easing.o(i.easing_get))
<BR><BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_vtranslate
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_top_to_bottom
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_scale
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_htranslate
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_fade
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_bottom_to_top
</UL>

<P><STRONG><a name="[2b1]"></a>edit_create</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, edit.o(i.edit_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = edit_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_text_limit
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[2b2]"></a>edit_set_text_limit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, edit.o(i.edit_set_text_limit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = edit_set_text_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_create
</UL>

<P><STRONG><a name="[2ca]"></a>emitter_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, emitter.o(i.emitter_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = emitter_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on
</UL>

<P><STRONG><a name="[2cc]"></a>emitter_deinit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, emitter.o(i.emitter_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = emitter_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_destroy
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_deinit
</UL>

<P><STRONG><a name="[2cd]"></a>emitter_destroy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, emitter.o(i.emitter_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = emitter_destroy &rArr; emitter_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_deinit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
</UL>

<P><STRONG><a name="[312]"></a>emitter_dispatch</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, emitter.o(i.emitter_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = emitter_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
</UL>

<P><STRONG><a name="[2cb]"></a>emitter_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, emitter.o(i.emitter_init))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_create
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_init
</UL>

<P><STRONG><a name="[2cf]"></a>emitter_on</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, emitter.o(i.emitter_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = emitter_on &rArr; emitter_extends &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_extends
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on
</UL>

<P><STRONG><a name="[2d0]"></a>event_queue_create</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, event_queue.o(i.event_queue_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = event_queue_create &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_alloc
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_init
</UL>

<P><STRONG><a name="[2d2]"></a>event_queue_destroy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, event_queue.o(i.event_queue_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = event_queue_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_reset
</UL>

<P><STRONG><a name="[2d3]"></a>event_queue_recv</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, event_queue.o(i.event_queue_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = event_queue_recv &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_recv_event
</UL>

<P><STRONG><a name="[2d4]"></a>event_queue_send</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, event_queue.o(i.event_queue_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = event_queue_send &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_queue_event
</UL>

<P><STRONG><a name="[2d5]"></a>find_item</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, enums.o(i.find_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = find_item
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_draw_type_find
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_type_find
</UL>

<P><STRONG><a name="[2d6]"></a>font_bitmap_create</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, font_bitmap.o(i.font_bitmap_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = font_bitmap_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_bitmap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_add_font
</UL>

<P><STRONG><a name="[2d7]"></a>font_bitmap_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, font_bitmap.o(i.font_bitmap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = font_bitmap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_bitmap_create
</UL>

<P><STRONG><a name="[2dd]"></a>font_destroy</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, font.o(i.font_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = font_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_deinit
</UL>

<P><STRONG><a name="[266]"></a>font_find_glyph</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, font.o(i.font_find_glyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = font_find_glyph
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_measure_text_default
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_text_impl
</UL>

<P><STRONG><a name="[322]"></a>font_manager</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, font_manager.o(i.font_manager))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_add_font
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_raw_init_canvas
</UL>

<P><STRONG><a name="[2d9]"></a>font_manager_add</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, font_manager.o(i.font_manager_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = font_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_add_font
</UL>

<P><STRONG><a name="[2da]"></a>font_manager_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, font_manager.o(i.font_manager_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = font_manager_create &rArr; font_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[2dc]"></a>font_manager_deinit</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, font_manager.o(i.font_manager_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = font_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_destroy
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_destroy
</UL>

<P><STRONG><a name="[2de]"></a>font_manager_destroy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, font_manager.o(i.font_manager_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = font_manager_destroy &rArr; font_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_deinit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[279]"></a>font_manager_find</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, font_manager.o(i.font_manager_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = font_manager_find &rArr; font_match
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_match
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_font
</UL>

<P><STRONG><a name="[2db]"></a>font_manager_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, font_manager.o(i.font_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = font_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_create
</UL>

<P><STRONG><a name="[37c]"></a>font_manager_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, font_manager.o(i.font_manager_set))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[2df]"></a>font_match</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, font.o(i.font_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = font_match
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_find
</UL>

<P><STRONG><a name="[2e0]"></a>get_offline_fb</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_support.o(i.get_offline_fb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_offline_fb
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_SetNextBufferAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_create_lcd
</UL>

<P><STRONG><a name="[2e2]"></a>get_online_fb</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_support.o(i.get_online_fb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_online_fb
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_SetNextBufferAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_create_lcd
</UL>

<P><STRONG><a name="[5d]"></a>get_time_ms</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform.o(i.get_time_ms))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_now_ms
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_now_s
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform.o(i.platform_prepare)
</UL>
<P><STRONG><a name="[28e]"></a>group_box_create</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, group_box.o(i.group_box_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = group_box_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_client_create
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[2e3]"></a>gui_app_start</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, demo_main.o(i.gui_app_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = gui_app_start &rArr; tk_init &rArr; main_loop_init &rArr; main_loop_raw_init_canvas &rArr; platform_create_lcd &rArr; lcd_mem_rgb565_create_double_fb &rArr; lcd_mem_create_double_fb &rArr; lcd_mem_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_run
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_init
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_init
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a0]"></a>idle_add</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, idle.o(i.idle_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = idle_add &rArr; idle_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_add
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_add_child
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_modal
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_dispatch_events
</UL>

<P><STRONG><a name="[2e9]"></a>idle_dispatch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, idle.o(i.idle_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = idle_dispatch &rArr; idle_manager_dispatch &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_dispatch
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_run
</UL>

<P><STRONG><a name="[2e7]"></a>idle_manager</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, idle.o(i.idle_manager))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_add
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_dispatch
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[2e8]"></a>idle_manager_add</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, idle.o(i.idle_manager_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = idle_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_add
</UL>

<P><STRONG><a name="[2eb]"></a>idle_manager_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, idle.o(i.idle_manager_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = idle_manager_create &rArr; idle_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[2ed]"></a>idle_manager_deinit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, idle.o(i.idle_manager_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = idle_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_destroy
</UL>

<P><STRONG><a name="[2ee]"></a>idle_manager_destroy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, idle.o(i.idle_manager_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = idle_manager_destroy &rArr; idle_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[2ea]"></a>idle_manager_dispatch</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, idle.o(i.idle_manager_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = idle_manager_dispatch &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_dispatch
</UL>

<P><STRONG><a name="[2ec]"></a>idle_manager_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, idle.o(i.idle_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = idle_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_create
</UL>

<P><STRONG><a name="[37a]"></a>idle_manager_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, idle.o(i.idle_manager_set))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[2f0]"></a>image_create</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, image.o(i.image_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = image_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[2f1]"></a>image_draw_type_find</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, enums.o(i.image_draw_type_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = image_draw_type_find &rArr; find_item
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_prop
</UL>

<P><STRONG><a name="[2fd]"></a>image_loader_load</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, image_loader.o(i.image_loader_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = image_loader_load
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
</UL>

<P><STRONG><a name="[301]"></a>image_manager</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, image_manager.o(i.image_manager))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_image_name
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[2f3]"></a>image_manager_add</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, image_manager.o(i.image_manager_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = image_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_now_s
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
</UL>

<P><STRONG><a name="[2f5]"></a>image_manager_create</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, image_manager.o(i.image_manager_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = image_manager_create &rArr; image_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[2f7]"></a>image_manager_deinit</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, image_manager.o(i.image_manager_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = image_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_deinit
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_cache_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_destroy
</UL>

<P><STRONG><a name="[2f8]"></a>image_manager_destroy</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, image_manager.o(i.image_manager_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = image_manager_destroy &rArr; image_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[2f6]"></a>image_manager_init</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, image_manager.o(i.image_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = image_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_create
</UL>

<P><STRONG><a name="[2f9]"></a>image_manager_load</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, image_manager.o(i.image_manager_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = image_manager_load &rArr; image_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_unref
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_ref
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_lookup
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_add
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_loader_load
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_image_name
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>

<P><STRONG><a name="[2fa]"></a>image_manager_lookup</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, image_manager.o(i.image_manager_lookup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = image_manager_lookup &rArr; time_now_s
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_now_s
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
</UL>

<P><STRONG><a name="[37d]"></a>image_manager_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, image_manager.o(i.image_manager_set))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[303]"></a>image_set_draw_type</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, image.o(i.image_set_draw_type))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_prop
</UL>

<P><STRONG><a name="[300]"></a>image_set_image_name</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, image.o(i.image_set_image_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = image_set_image_name &rArr; image_manager_load &rArr; image_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_image
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_prop
</UL>

<P><STRONG><a name="[2c5]"></a>input_type_find</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, enums.o(i.input_type_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = input_type_find &rArr; find_item
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
</UL>

<P><STRONG><a name="[2a7]"></a>label_create</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, label.o(i.label_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = label_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_title_create
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[243]"></a>lcd_begin_frame</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lcd.o(i.lcd_begin_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_begin_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_begin_frame
</UL>

<P><STRONG><a name="[247]"></a>lcd_draw_glyph</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, lcd.o(i.lcd_draw_glyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_draw_glyph
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_glyph
</UL>

<P><STRONG><a name="[249]"></a>lcd_draw_hline</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lcd.o(i.lcd_draw_hline))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_draw_hline
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_hline_impl
</UL>

<P><STRONG><a name="[245]"></a>lcd_draw_image</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd.o(i.lcd_draw_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_do_draw_image
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_prev
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_curr
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_prev
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_curr
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_prev
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_curr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_prev
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_curr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_prev
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_curr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_prev
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_curr
</UL>

<P><STRONG><a name="[263]"></a>lcd_draw_text</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, lcd.o(i.lcd_draw_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_draw_text
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_text
</UL>

<P><STRONG><a name="[269]"></a>lcd_draw_vline</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lcd.o(i.lcd_draw_vline))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_draw_vline
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_vline_impl
</UL>

<P><STRONG><a name="[26b]"></a>lcd_end_frame</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd.o(i.lcd_end_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_end_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_end_frame
</UL>

<P><STRONG><a name="[26e]"></a>lcd_fill_rect</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, lcd.o(i.lcd_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_fill_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_fill_rect_impl
</UL>

<P><STRONG><a name="[271]"></a>lcd_measure_text</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lcd.o(i.lcd_measure_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_measure_text
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_measure_text
</UL>

<P><STRONG><a name="[30e]"></a>lcd_mem_rgb565_create_double_fb</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcd_mem_rgb565.o(i.lcd_mem_rgb565_create_double_fb))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = lcd_mem_rgb565_create_double_fb &rArr; lcd_mem_create_double_fb &rArr; lcd_mem_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_create_double_fb
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_create_lcd
</UL>

<P><STRONG><a name="[273]"></a>lcd_set_clip_rect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd.o(i.lcd_set_clip_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_set_clip_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_clip_rect
</UL>

<P><STRONG><a name="[275]"></a>lcd_set_fill_color</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd.o(i.lcd_set_fill_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_set_fill_color
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_fill_color
</UL>

<P><STRONG><a name="[277]"></a>lcd_set_font_name</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd.o(i.lcd_set_font_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_set_font_name
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_font
</UL>

<P><STRONG><a name="[278]"></a>lcd_set_font_size</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd.o(i.lcd_set_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_set_font_size
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_font
</UL>

<P><STRONG><a name="[27b]"></a>lcd_set_global_alpha</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lcd.o(i.lcd_set_global_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_set_global_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_global_alpha
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_curr
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_curr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_curr
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_curr
</UL>

<P><STRONG><a name="[27d]"></a>lcd_set_stroke_color</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd.o(i.lcd_set_stroke_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_set_stroke_color
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_stroke_color
</UL>

<P><STRONG><a name="[27f]"></a>lcd_set_text_color</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd.o(i.lcd_set_text_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_set_text_color
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_text_color
</UL>

<P><STRONG><a name="[282]"></a>lcd_stroke_rect</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, lcd.o(i.lcd_stroke_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_stroke_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_stroke_rect_impl
</UL>

<P><STRONG><a name="[3c8]"></a>lcd_take_snapshot</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd.o(i.lcd_take_snapshot))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_take_snapshot
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_prepare
</UL>

<P><STRONG><a name="[375]"></a>locale</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, locale.o(i.locale))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[310]"></a>locale_change</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, locale.o(i.locale_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = locale_change &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_dispatch
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_clear_cache
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_unref
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_ref
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_init
</UL>

<P><STRONG><a name="[313]"></a>locale_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, locale.o(i.locale_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = locale_create &rArr; locale_init &rArr; locale_change &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[315]"></a>locale_deinit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, locale.o(i.locale_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = locale_deinit &rArr; resource_manager_unref &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_deinit
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_unref
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_destroy
</UL>

<P><STRONG><a name="[316]"></a>locale_destroy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, locale.o(i.locale_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = locale_destroy &rArr; locale_deinit &rArr; resource_manager_unref &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[314]"></a>locale_init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, locale.o(i.locale_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = locale_init &rArr; locale_change &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_create
</UL>

<P><STRONG><a name="[37b]"></a>locale_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, locale.o(i.locale_set))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[185]"></a>main</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, awtk.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = main &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_start
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_lcd_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitSemcPins
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcdifPixelClock
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcd
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitI2C1Pins
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;awtk_touch_init
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[29d]"></a>main_loop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main_loop.o(i.main_loop))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_quit
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_modal
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_run
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_exit
</UL>

<P><STRONG><a name="[377]"></a>main_loop_destroy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main_loop.o(i.main_loop_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main_loop_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_exit
</UL>

<P><STRONG><a name="[31a]"></a>main_loop_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main_loop_rt1052_raw.o(i.main_loop_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = main_loop_init &rArr; main_loop_raw_init_canvas &rArr; platform_create_lcd &rArr; lcd_mem_rgb565_create_double_fb &rArr; lcd_mem_create_double_fb &rArr; lcd_mem_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_raw_init_canvas
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init
</UL>

<P><STRONG><a name="[31d]"></a>main_loop_post_pointer_event</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, main_loop_simple.o(i.main_loop_post_pointer_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main_loop_post_pointer_event &rArr; main_loop_queue_event
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_queue_event
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disaptch_input
</UL>

<P><STRONG><a name="[31e]"></a>main_loop_queue_event</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main_loop.o(i.main_loop_queue_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = main_loop_queue_event
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_post_pointer_event
</UL>

<P><STRONG><a name="[2a3]"></a>main_loop_quit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main_loop.o(i.main_loop_quit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main_loop_quit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_quit
</UL>

<P><STRONG><a name="[29f]"></a>main_loop_run</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main_loop.o(i.main_loop_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main_loop_run
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_modal
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_run
</UL>

<P><STRONG><a name="[325]"></a>main_loop_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main_loop.o(i.main_loop_set))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_init
</UL>

<P><STRONG><a name="[31b]"></a>main_loop_simple_init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, main_loop_simple.o(i.main_loop_simple_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = main_loop_simple_init &rArr; window_manager_resize &rArr; widget_move_resize &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_create
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_set
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_resize
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mutex_create
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_init
</UL>

<P><STRONG><a name="[31f]"></a>main_loop_simple_reset</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main_loop_simple.o(i.main_loop_simple_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = main_loop_simple_reset &rArr; event_queue_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_destroy
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mutex_destroy
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_raw_destroy
</UL>

<P><STRONG><a name="[32c]"></a>main_loop_sleep</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, main_loop.o(i.main_loop_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = main_loop_sleep &rArr; timer_next_time &rArr; timer_manager_next_time
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_next_time
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_now_ms
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_run
</UL>

<P><STRONG><a name="[321]"></a>platform_create_lcd</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, main_loop_rt1052_raw.o(i.platform_create_lcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = platform_create_lcd &rArr; lcd_mem_rgb565_create_double_fb &rArr; lcd_mem_create_double_fb &rArr; lcd_mem_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_rgb565_create_double_fb
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_online_fb
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_offline_fb
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_raw_init_canvas
</UL>

<P><STRONG><a name="[320]"></a>platform_disaptch_input</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, main_loop_rt1052_raw.o(i.platform_disaptch_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = platform_disaptch_input &rArr; AWTK_Touch_Init &rArr; FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_GetSingleTouch
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AWTK_Touch_Init
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_post_pointer_event
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_raw_dispatch
</UL>

<P><STRONG><a name="[335]"></a>platform_prepare</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform.o(i.platform_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = platform_prepare &rArr; timer_init &rArr; timer_manager_create &rArr; timer_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[2b0]"></a>pow</STRONG> (Thumb, 2512 bytes, Stack size 128 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_out
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_in
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_in
</UL>

<P><STRONG><a name="[339]"></a>progress_bar_create</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, progress_bar.o(i.progress_bar_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = progress_bar_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[33c]"></a>progress_bar_set_show_text</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, progress_bar.o(i.progress_bar_set_show_text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_prop
</UL>

<P><STRONG><a name="[333]"></a>progress_bar_set_value</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, progress_bar.o(i.progress_bar_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = progress_bar_set_value &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_prop
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_inc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_dec
</UL>

<P><STRONG><a name="[33b]"></a>progress_bar_set_vertical</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, progress_bar.o(i.progress_bar_set_vertical))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_prop
</UL>

<P><STRONG><a name="[394]"></a>rbuffer_has_more</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, buffer.o(i.rbuffer_has_more))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[38b]"></a>rbuffer_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, buffer.o(i.rbuffer_init))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[391]"></a>rbuffer_peek_uint8</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, buffer.o(i.rbuffer_peek_uint8))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[33d]"></a>rbuffer_read_binary</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, buffer.o(i.rbuffer_read_binary))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rbuffer_read_binary
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[33e]"></a>rbuffer_read_string</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, buffer.o(i.rbuffer_read_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rbuffer_read_string &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[38c]"></a>rbuffer_read_uint32</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, buffer.o(i.rbuffer_read_uint32))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[392]"></a>rbuffer_read_uint8</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, buffer.o(i.rbuffer_read_uint8))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[350]"></a>rect_contains</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rect.o(i.rect_contains))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rect_contains
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
</UL>

<P><STRONG><a name="[3d1]"></a>rect_merge</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, rect.o(i.rect_merge))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rect_merge
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_normal
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_invalidate
</UL>

<P><STRONG><a name="[2e5]"></a>resource_init</STRONG> (Thumb, 368 bytes, Stack size 8 bytes, resource.o(i.resource_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = resource_init &rArr; tk_init_resources &rArr; tk_add_font &rArr; font_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_add
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_resources
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_start
</UL>

<P><STRONG><a name="[2fb]"></a>resource_manager</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, resource_manager.o(i.resource_manager))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_deinit
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_destroy
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_resources
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_init
</UL>

<P><STRONG><a name="[340]"></a>resource_manager_add</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, resource_manager.o(i.resource_manager_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = resource_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_info_ref
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_init
</UL>

<P><STRONG><a name="[311]"></a>resource_manager_clear_cache</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, resource_manager.o(i.resource_manager_clear_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = resource_manager_clear_cache &rArr; array_remove_all
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_remove_all
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
</UL>

<P><STRONG><a name="[344]"></a>resource_manager_create</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, resource_manager.o(i.resource_manager_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = resource_manager_create &rArr; resource_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[346]"></a>resource_manager_deinit</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, resource_manager.o(i.resource_manager_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = resource_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_deinit
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_info_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_destroy
</UL>

<P><STRONG><a name="[347]"></a>resource_manager_destroy</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, resource_manager.o(i.resource_manager_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = resource_manager_destroy &rArr; resource_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_set
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[349]"></a>resource_manager_find_in_cache</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, resource_manager.o(i.resource_manager_find_in_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = resource_manager_find_in_cache
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_ref
</UL>

<P><STRONG><a name="[345]"></a>resource_manager_init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, resource_manager.o(i.resource_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = resource_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_init
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_create
</UL>

<P><STRONG><a name="[34a]"></a>resource_manager_load</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, resource_manager.o(i.resource_manager_load))
<BR><BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_ref
</UL>

<P><STRONG><a name="[2fc]"></a>resource_manager_ref</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, resource_manager.o(i.resource_manager_ref))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = resource_manager_ref &rArr; resource_manager_find_in_cache
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_load
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_find_in_cache
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_info_ref
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>

<P><STRONG><a name="[348]"></a>resource_manager_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, resource_manager.o(i.resource_manager_set))
<BR><BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_destroy
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[2fe]"></a>resource_manager_unref</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, resource_manager.o(i.resource_manager_unref))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = resource_manager_unref &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_deinit
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_change
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>

<P><STRONG><a name="[2af]"></a>sin</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_inout
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_in
</UL>

<P><STRONG><a name="[32e]"></a>sleep_ms</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, platform.o(i.sleep_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sleep_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_sleep
</UL>

<P><STRONG><a name="[34c]"></a>slider_create</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, slider.o(i.slider_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = slider_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[358]"></a>slider_set_max</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, slider.o(i.slider_set_max))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_prop
</UL>

<P><STRONG><a name="[357]"></a>slider_set_min</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, slider.o(i.slider_set_min))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_prop
</UL>

<P><STRONG><a name="[359]"></a>slider_set_step</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, slider.o(i.slider_set_step))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_prop
</UL>

<P><STRONG><a name="[355]"></a>slider_set_value</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, slider.o(i.slider_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = slider_set_value &rArr; slider_set_value_internal &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_value_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_prop
</UL>

<P><STRONG><a name="[356]"></a>slider_set_vertical</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, slider.o(i.slider_set_vertical))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_prop
</UL>

<P><STRONG><a name="[309]"></a>soft_blend_image</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, soft_g2d.o(i.soft_blend_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = soft_blend_image &rArr; blend_image_8888_8888 &rArr; blend_image_without_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_8888_8888
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_8888_565
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_565_8888
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_565_565
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_draw_image
</UL>

<P><STRONG><a name="[308]"></a>soft_copy_image</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, soft_g2d.o(i.soft_copy_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = soft_copy_image &rArr; tk_pixel_copy &rArr; tk_memcpy32
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_pixel_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_end_frame
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_draw_image
</UL>

<P><STRONG><a name="[30c]"></a>soft_fill_rect</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, soft_g2d.o(i.soft_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = soft_fill_rect &rArr; tk_memset16
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_fill_rect
</UL>

<P><STRONG><a name="[2ac]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_out
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_in
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[35d]"></a>str_eq</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, str.o(i.str_eq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = str_eq
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup_child
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup_all
</UL>

<P><STRONG><a name="[35f]"></a>str_from_float</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, str.o(i.str_from_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = str_from_float &rArr; str_set &rArr; str_set_with_len &rArr; str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_value
</UL>

<P><STRONG><a name="[362]"></a>str_from_int</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, str.o(i.str_from_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = str_from_int &rArr; str_set &rArr; str_set_with_len &rArr; str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_itoa
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_value
</UL>

<P><STRONG><a name="[2a5]"></a>str_from_value</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, str.o(i.str_from_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = str_from_value &rArr; str_from_int &rArr; str_set &rArr; str_set_with_len &rArr; str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_str
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_int
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_float
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_set_prop
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_set_prop
</UL>

<P><STRONG><a name="[296]"></a>str_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, str.o(i.str_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = str_init &rArr; str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_extend
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_create
</UL>

<P><STRONG><a name="[298]"></a>str_reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, str.o(i.str_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = str_reset &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_destroy
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_destroy
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
</UL>

<P><STRONG><a name="[361]"></a>str_set</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, str.o(i.str_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = str_set &rArr; str_set_with_len &rArr; str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set_with_len
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_name
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_value
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_int
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_float
</UL>

<P><STRONG><a name="[363]"></a>str_set_with_len</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, str.o(i.str_set_with_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = str_set_with_len &rArr; str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_extend
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set
</UL>

<P><STRONG><a name="[2c0]"></a>style_get_color</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, theme.o(i.style_get_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = style_get_color &rArr; style_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_int
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_on_paint_self
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_border
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>

<P><STRONG><a name="[2be]"></a>style_get_int</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, theme.o(i.style_get_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = style_get_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_color
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>

<P><STRONG><a name="[2c1]"></a>style_get_str</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, theme.o(i.style_get_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = style_get_str &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>

<P><STRONG><a name="[305]"></a>system_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_info.o(i.system_info))
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_create
</UL>

<P><STRONG><a name="[365]"></a>theme</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, theme.o(i.theme))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_update_style
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_init
</UL>

<P><STRONG><a name="[3bc]"></a>theme_find_style</STRONG> (Thumb, 232 bytes, Stack size 36 bytes, theme.o(i.theme_find_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = theme_find_style
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_update_style
</UL>

<P><STRONG><a name="[364]"></a>theme_init</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, theme.o(i.theme_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = theme_init
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_resources
</UL>

<P><STRONG><a name="[60]"></a>time_now_ms</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, time.o(i.time_now_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = time_now_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_sleep
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_animation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tk.o(i.tk_init_internal)
</UL>
<P><STRONG><a name="[2f4]"></a>time_now_s</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, time.o(i.time_now_s))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = time_now_s
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_lookup
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_add
</UL>

<P><STRONG><a name="[2b7]"></a>timer_add</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, timer.o(i.timer_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = timer_add &rArr; timer_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_add
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_event
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_animation
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_dispatch_events
</UL>

<P><STRONG><a name="[329]"></a>timer_dispatch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, timer.o(i.timer_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = timer_dispatch &rArr; timer_manager_dispatch &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_dispatch
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_run
</UL>

<P><STRONG><a name="[337]"></a>timer_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer.o(i.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = timer_init &rArr; timer_manager_create &rArr; timer_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_set
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_create
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_prepare
</UL>

<P><STRONG><a name="[366]"></a>timer_manager</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.timer_manager))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_add
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_next_time
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_dispatch
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[367]"></a>timer_manager_add</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, timer.o(i.timer_manager_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_add
</UL>

<P><STRONG><a name="[369]"></a>timer_manager_create</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, timer.o(i.timer_manager_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = timer_manager_create &rArr; timer_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_init
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[36c]"></a>timer_manager_deinit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, timer.o(i.timer_manager_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = timer_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_destroy
</UL>

<P><STRONG><a name="[36d]"></a>timer_manager_destroy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timer.o(i.timer_manager_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = timer_manager_destroy &rArr; timer_manager_deinit &rArr; array_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>

<P><STRONG><a name="[368]"></a>timer_manager_dispatch</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, timer.o(i.timer_manager_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_manager_dispatch &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_pop
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_dispatch
</UL>

<P><STRONG><a name="[36b]"></a>timer_manager_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timer.o(i.timer_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = timer_manager_init &rArr; array_init &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_init
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_create
</UL>

<P><STRONG><a name="[36e]"></a>timer_manager_next_time</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, timer.o(i.timer_manager_next_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_manager_next_time
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_next_time
</UL>

<P><STRONG><a name="[36a]"></a>timer_manager_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.timer_manager_set))
<BR><BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[32d]"></a>timer_next_time</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, timer.o(i.timer_next_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_next_time &rArr; timer_manager_next_time
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_next_time
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_sleep
</UL>

<P><STRONG><a name="[2d1]"></a>tk_alloc</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, mem.o(i.tk_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_info_dump
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_create
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_take_snapshot
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_create
</UL>

<P><STRONG><a name="[370]"></a>tk_atof</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, utils.o(i.tk_atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tk_atof &rArr; tk_strtol_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_strtol_internal
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
</UL>

<P><STRONG><a name="[372]"></a>tk_atoi</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, utils.o(i.tk_atoi))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tk_atoi &rArr; tk_strtol &rArr; tk_strtol_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_strtol
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
</UL>

<P><STRONG><a name="[218]"></a>tk_calloc</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, mem.o(i.tk_calloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_alloc
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_create
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_create
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_extends
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_create
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_create
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_create
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;group_box_create
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_create
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_create
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_parsed_self_layout_params
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_children_layout_params
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_create
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_add
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_create
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_create
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_add
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_add
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_create
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_create
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_create
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_create
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_create
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_create
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_bitmap_create
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_create
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_vtranslate
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_top_to_bottom
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_scale
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_htranslate
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_fade
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_bottom_to_top
</UL>

<P><STRONG><a name="[374]"></a>tk_deinit_internal</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tk.o(i.tk_deinit_internal))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = tk_deinit_internal &rArr; locale_destroy &rArr; locale_deinit &rArr; resource_manager_unref &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_destroy
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_destroy
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_destroy
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_destroy
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_destroy
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_exit
</UL>

<P><STRONG><a name="[21a]"></a>tk_free</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, mem.o(i.tk_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_merge
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_destroy
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_destroy
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_destroy
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_deinit
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_realloc
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_destroy
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_deinit
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_reset
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_destroy
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_destroy
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_cache_destroy
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_dispatch
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_destroy
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_deinit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_dispatch
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_destroy
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_deinit
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_destroy
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_info_destroy
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_reset
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snapshot_destroy
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_destroy
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_destroy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_bitmap_destroy
</UL>

<P><STRONG><a name="[360]"></a>tk_ftoa</STRONG> (Thumb, 262 bytes, Stack size 104 bytes, utils.o(i.tk_ftoa))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tk_ftoa &rArr; tk_itoa &rArr; tk_itoa_simple
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_itoa
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_float
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_float
</UL>

<P><STRONG><a name="[2e4]"></a>tk_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tk.o(i.tk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = tk_init &rArr; main_loop_init &rArr; main_loop_raw_init_canvas &rArr; platform_create_lcd &rArr; lcd_mem_rgb565_create_double_fb &rArr; lcd_mem_create_double_fb &rArr; lcd_mem_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_init
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_start
</UL>

<P><STRONG><a name="[379]"></a>tk_init_internal</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, tk.o(i.tk_init_internal))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = tk_init_internal &rArr; locale_create &rArr; locale_init &rArr; locale_change &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_set
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_create
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_set
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locale_create
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_set
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_create
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_set
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_manager_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_set
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_manager_create
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_set
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_create
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_prepare
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_set
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init
</UL>

<P><STRONG><a name="[341]"></a>tk_init_resources</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, tk.o(i.tk_init_resources))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = tk_init_resources &rArr; tk_add_font &rArr; font_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_init
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_add_font
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_init
</UL>

<P><STRONG><a name="[33a]"></a>tk_itoa</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, utils.o(i.tk_itoa))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tk_itoa &rArr; tk_itoa_simple
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_itoa_simple
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_int
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_on_paint_self
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_int
</UL>

<P><STRONG><a name="[331]"></a>tk_mem_info_dump</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, mem.o(i.tk_mem_info_dump))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_alloc
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_show_dialog
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ok
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cancel
</UL>

<P><STRONG><a name="[336]"></a>tk_mem_init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, mem.o(i.tk_mem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tk_mem_init
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_prepare
</UL>

<P><STRONG><a name="[381]"></a>tk_mem_stat</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, mem.o(i.tk_mem_stat))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_info_dump
</UL>

<P><STRONG><a name="[382]"></a>tk_memcpy16</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, utils.o(i.tk_memcpy16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tk_memcpy16
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_pixel_copy
</UL>

<P><STRONG><a name="[383]"></a>tk_memcpy32</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, utils.o(i.tk_memcpy32))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tk_memcpy32
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_pixel_copy
</UL>

<P><STRONG><a name="[35b]"></a>tk_memset16</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, utils.o(i.tk_memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tk_memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_fill_rect
</UL>

<P><STRONG><a name="[323]"></a>tk_mutex_create</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mutex.o(i.tk_mutex_create))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_init
</UL>

<P><STRONG><a name="[328]"></a>tk_mutex_destroy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mutex.o(i.tk_mutex_destroy))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_reset
</UL>

<P><STRONG><a name="[326]"></a>tk_mutex_lock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mutex.o(i.tk_mutex_lock))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_recv_event
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_queue_event
</UL>

<P><STRONG><a name="[327]"></a>tk_mutex_unlock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mutex.o(i.tk_mutex_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_recv_event
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_queue_event
</UL>

<P><STRONG><a name="[35a]"></a>tk_pixel_copy</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, utils.o(i.tk_pixel_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tk_pixel_copy &rArr; tk_memcpy32
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_memcpy32
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_memcpy16
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_copy_image
</UL>

<P><STRONG><a name="[21e]"></a>tk_realloc</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, mem.o(i.tk_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_alloc
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_extends
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_extend
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_extend
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_extend
</UL>

<P><STRONG><a name="[2e6]"></a>tk_run</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tk.o(i.tk_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tk_run &rArr; tk_exit &rArr; tk_deinit_internal &rArr; locale_destroy &rArr; locale_deinit &rArr; resource_manager_unref &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_run
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_start
</UL>

<P><STRONG><a name="[373]"></a>tk_strtol</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, utils.o(i.tk_strtol))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tk_strtol &rArr; tk_strtol_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_strtol_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atoi
</UL>

<P><STRONG><a name="[384]"></a>ui_builder_default</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ui_builder_default.o(i.ui_builder_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ui_builder_default &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>

<P><STRONG><a name="[395]"></a>ui_builder_on_end</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ui_builder.o(i.ui_builder_on_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_builder_on_end
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[38d]"></a>ui_builder_on_start</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ui_builder.o(i.ui_builder_on_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_builder_on_start
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[393]"></a>ui_builder_on_widget_end</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ui_builder.o(i.ui_builder_on_widget_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_builder_on_widget_end
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[38f]"></a>ui_builder_on_widget_prop</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ui_builder.o(i.ui_builder_on_widget_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui_builder_on_widget_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[390]"></a>ui_builder_on_widget_prop_end</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ui_builder.o(i.ui_builder_on_widget_prop_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_builder_on_widget_prop_end
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[38e]"></a>ui_builder_on_widget_start</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ui_builder.o(i.ui_builder_on_widget_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui_builder_on_widget_start
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load_default
</UL>

<P><STRONG><a name="[3d6]"></a>ui_loader_load</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ui_loader.o(i.ui_loader_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ui_loader_load
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>

<P><STRONG><a name="[cd]"></a>ui_loader_load_default</STRONG> (Thumb, 234 bytes, Stack size 72 bytes, ui_loader_default.o(i.ui_loader_load_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ui_loader_load_default &rArr; rbuffer_read_string &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_read_uint8
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_read_uint32
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_read_string
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_read_binary
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_peek_uint8
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_init
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbuffer_has_more
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_on_widget_start
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_on_widget_prop_end
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_on_widget_prop
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_on_widget_end
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_on_start
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_on_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_loader_default.o(.constdata)
</UL>
<P><STRONG><a name="[397]"></a>utf8_get_char</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, utf8.o(i.utf8_get_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = utf8_get_char
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utf8_to_utf16
</UL>

<P><STRONG><a name="[396]"></a>utf8_to_utf16</STRONG> (Thumb, 68 bytes, Stack size 28 bytes, utf8.o(i.utf8_to_utf16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = utf8_to_utf16 &rArr; utf8_get_char
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utf8_get_char
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set_utf8
</UL>

<P><STRONG><a name="[289]"></a>value_bool</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, value.o(i.value_bool))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = value_bool &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_prop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_prop
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_prop
</UL>

<P><STRONG><a name="[2c3]"></a>value_float</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, value.o(i.value_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = value_float &rArr; tk_atof &rArr; tk_strtol_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atof
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2f
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_value
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
</UL>

<P><STRONG><a name="[2a6]"></a>value_int</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, value.o(i.value_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = value_int &rArr; tk_atoi &rArr; tk_strtol &rArr; tk_strtol_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atoi
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_uint32
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_value
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_set_prop
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_prop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_prop
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_prop
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
</UL>

<P><STRONG><a name="[302]"></a>value_pointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, value.o(i.value_pointer))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_prop
</UL>

<P><STRONG><a name="[2b5]"></a>value_set_bool</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, value.o(i.value_set_bool))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_get_prop
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_prop
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_get_prop
</UL>

<P><STRONG><a name="[2b4]"></a>value_set_float</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, value.o(i.value_set_float))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_get_prop
</UL>

<P><STRONG><a name="[29b]"></a>value_set_int</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, value.o(i.value_set_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = value_set_int
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_int32
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_get_prop
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_get_prop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_get_prop
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_prop
</UL>

<P><STRONG><a name="[39b]"></a>value_set_int32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, value.o(i.value_set_int32))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_int
</UL>

<P><STRONG><a name="[2f2]"></a>value_set_pointer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, value.o(i.value_set_pointer))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_get_prop
</UL>

<P><STRONG><a name="[29a]"></a>value_set_str</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, value.o(i.value_set_str))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_get_prop
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_get_prop
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_prop
</UL>

<P><STRONG><a name="[2b3]"></a>value_set_uint32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, value.o(i.value_set_uint32))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_get_prop
</UL>

<P><STRONG><a name="[287]"></a>value_set_uint8</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, value.o(i.value_set_uint8))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_get_prop
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_get_prop
</UL>

<P><STRONG><a name="[2b6]"></a>value_set_wstr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, value.o(i.value_set_wstr))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_get_prop
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
</UL>

<P><STRONG><a name="[2c4]"></a>value_str</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, value.o(i.value_str))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_value
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_prop
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_open_animation
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_close_animation
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
</UL>

<P><STRONG><a name="[2c2]"></a>value_uint32</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, value.o(i.value_uint32))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = value_uint32 &rArr; value_int &rArr; tk_atoi &rArr; tk_strtol &rArr; tk_strtol_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
</UL>

<P><STRONG><a name="[2c7]"></a>value_wstr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, value.o(i.value_wstr))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
</UL>

<P><STRONG><a name="[30d]"></a>vgcanvas_create</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, vgcanvas_null.o(i.vgcanvas_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vgcanvas_create
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_get_vgcanvas
</UL>

<P><STRONG><a name="[389]"></a>view_create</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, view.o(i.view_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = view_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[39c]"></a>wcs_chr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wstr.o(i.wcs_chr))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcschr
</UL>

<P><STRONG><a name="[39e]"></a>wcs_cpy</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wstr.o(i.wcs_cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wcs_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcscpy
</UL>

<P><STRONG><a name="[39f]"></a>wcs_len</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wstr.o(i.wcs_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wcs_len
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen
</UL>

<P><STRONG><a name="[2bc]"></a>wcschr</STRONG> (Thumb, 16 bytes, Stack size 12 bytes, wstr.o(i.wcschr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = wcschr
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcs_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_key_down
</UL>

<P><STRONG><a name="[39d]"></a>wcscpy</STRONG> (Thumb, 16 bytes, Stack size 12 bytes, wstr.o(i.wcscpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = wcscpy &rArr; wcs_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcs_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set
</UL>

<P><STRONG><a name="[265]"></a>wcslen</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, wstr.o(i.wcslen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wcslen &rArr; wcs_len
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcs_len
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set_utf8
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_measure_text_default
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_text_impl
</UL>

<P><STRONG><a name="[3a0]"></a>widget_add_child</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(i.widget_add_child))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_create
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_add_child
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>

<P><STRONG><a name="[216]"></a>widget_child_on</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, widget.o(i.widget_child_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = widget_child_on &rArr; widget_on &rArr; emitter_on &rArr; emitter_extends &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_show_window2
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_show_window1
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_show_dialog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_init
</UL>

<P><STRONG><a name="[3a2]"></a>widget_destroy</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, widget.o(i.widget_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = widget_destroy &rArr; emitter_destroy &rArr; emitter_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_destroy
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_destroy
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_reset
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_reset
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy_children
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_idle_destroy_window
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy_children
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_close_destroy
</UL>

<P><STRONG><a name="[3a3]"></a>widget_destroy_children</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, widget.o(i.widget_destroy_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = widget_destroy_children &rArr;  widget_destroy (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
</UL>

<P><STRONG><a name="[c3]"></a>widget_destroy_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_destroy_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[23f]"></a>widget_dispatch</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, widget.o(i.widget_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = widget_dispatch &rArr; emitter_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_dispatch
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_event_default
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_on_event
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_value_only
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_value_internal
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_up
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_move
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_down
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_self
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_keyup
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_keydown
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
</UL>

<P><STRONG><a name="[3a5]"></a>widget_draw_background</STRONG> (Thumb, 150 bytes, Stack size 88 bytes, widget.o(i.widget_draw_background))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_int
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_color
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_fill_color
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_fill_rect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_background
</UL>

<P><STRONG><a name="[3a6]"></a>widget_draw_border</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, widget.o(i.widget_draw_border))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = widget_draw_border &rArr; canvas_stroke_rect &rArr; canvas_stroke_rect_impl &rArr; canvas_draw_vline_impl &rArr; lcd_draw_vline
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_color
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_init
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_stroke_rect
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_stroke_color
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_done
</UL>

<P><STRONG><a name="[3a7]"></a>widget_draw_icon_text</STRONG> (Thumb, 540 bytes, Stack size 120 bytes, widget.o(i.widget_draw_icon_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_int
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_color
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_text_color
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_font
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_measure_text
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_text
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_icon
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint_helper
</UL>

<P><STRONG><a name="[3a8]"></a>widget_find_target</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, widget.o(i.widget_find_target))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = widget_find_target &rArr; widget_find_target_default &rArr; widget_to_local
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_find_target_default
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_move
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_down
</UL>

<P><STRONG><a name="[c2]"></a>widget_find_target_default</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, widget_vtable.o(i.widget_find_target_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = widget_find_target_default &rArr; widget_to_local
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_to_local
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_find_target
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3ad]"></a>widget_get_child</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, widget.o(i.widget_get_child))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_children
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_get_top_window
</UL>

<P><STRONG><a name="[299]"></a>widget_get_prop</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, widget.o(i.widget_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = widget_get_prop &rArr; value_set_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_wstr
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_bool
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_str
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_int
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_int32
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_get_prop
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_open_animation
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_close_animation
</UL>

<P><STRONG><a name="[b4]"></a>widget_get_prop_default</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_get_prop_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[351]"></a>widget_grab</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(i.widget_grab))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = widget_grab &rArr; widget_grab_default
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_grab_default
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
</UL>

<P><STRONG><a name="[c0]"></a>widget_grab_default</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, widget_vtable.o(i.widget_grab_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = widget_grab_default
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_grab
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[23c]"></a>widget_init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, widget.o(i.widget_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_update_style
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_init
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_vtable_default
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_add_child
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_create
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_create
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;group_box_create
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_create
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_create
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_create
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_create
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_create
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_create
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
</UL>

<P><STRONG><a name="[29e]"></a>widget_invalidate</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, widget.o(i.widget_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate_default
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_dirty
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_update_carent
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_key_down
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_add_child
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_modal
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_value_internal
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_value
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child_real
</UL>

<P><STRONG><a name="[be]"></a>widget_invalidate_default</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, widget_vtable.o(i.widget_invalidate_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = widget_invalidate_default &rArr;  widget_invalidate_default (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate_default
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate_default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[385]"></a>widget_layout</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, layout.o(i.widget_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = widget_layout &rArr; widget_layout_children &rArr;  widget_layout_children (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_children
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_self
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_end
</UL>

<P><STRONG><a name="[387]"></a>widget_layout_calc</STRONG> (Thumb, 208 bytes, Stack size 36 bytes, layout.o(i.widget_layout_calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = widget_layout_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_self
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[2a1]"></a>widget_layout_children</STRONG> (Thumb, 916 bytes, Stack size 80 bytes, layout.o(i.widget_layout_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + In Cycle
<LI>Call Chain = widget_layout_children &rArr;  widget_layout_children (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_children
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_child
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_self
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_children
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_on_relayout_children
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout
</UL>

<P><STRONG><a name="[3ac]"></a>widget_layout_self</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, layout.o(i.widget_layout_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = widget_layout_self &rArr; widget_move_resize &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_children
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout
</UL>

<P><STRONG><a name="[215]"></a>widget_lookup</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, widget.o(i.widget_lookup))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = widget_lookup &rArr; widget_lookup_child &rArr; str_eq
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup_child
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup_all
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_child_on
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_init
</UL>

<P><STRONG><a name="[23d]"></a>widget_move_resize</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, widget.o(i.widget_move_resize))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = widget_move_resize &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_add_child
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_children
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_create
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;group_box_create
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_on_relayout_children
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_create
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_self
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_create
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_create
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_create
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_create
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_create
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_resize
</UL>

<P><STRONG><a name="[3a1]"></a>widget_on</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, widget.o(i.widget_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = widget_on &rArr; emitter_on &rArr; emitter_extends &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_on
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_create
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_add_child
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_child_on
</UL>

<P><STRONG><a name="[b6]"></a>widget_on_click_default</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_click_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[bf]"></a>widget_on_event_default</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_event_default))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3b0]"></a>widget_on_keydown</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, widget.o(i.widget_on_keydown))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = widget_on_keydown &rArr;  widget_on_keydown (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_keydown
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_keydown
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_dispatch_input_event
</UL>

<P><STRONG><a name="[b8]"></a>widget_on_keydown_default</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_keydown_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3b1]"></a>widget_on_keyup</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, widget.o(i.widget_on_keyup))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = widget_on_keyup &rArr;  widget_on_keyup (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_keyup
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_keyup
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_dispatch_input_event
</UL>

<P><STRONG><a name="[b7]"></a>widget_on_keyup_default</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_keyup_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3b2]"></a>widget_on_paint_background</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, widget.o(i.widget_on_paint_background))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_background
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>

<P><STRONG><a name="[ad]"></a>widget_on_paint_background_null</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_paint_background_null))
<BR>[Address Reference Count : 2]<UL><LI> progress_bar.o(.constdata)
<LI> slider.o(.constdata)
</UL>
<P><STRONG><a name="[3b3]"></a>widget_on_paint_children</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, widget.o(i.widget_on_paint_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = widget_on_paint_children &rArr;  widget_on_paint_children_default (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_children_default
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>

<P><STRONG><a name="[ba]"></a>widget_on_paint_children_default</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, widget_vtable.o(i.widget_on_paint_children_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = widget_on_paint_children_default &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_children
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3b5]"></a>widget_on_paint_done</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, widget.o(i.widget_on_paint_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = widget_on_paint_done &rArr; widget_draw_border &rArr; canvas_stroke_rect &rArr; canvas_stroke_rect_impl &rArr; canvas_draw_vline_impl &rArr; lcd_draw_vline
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_border
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>

<P><STRONG><a name="[af]"></a>widget_on_paint_done_null</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_paint_done_null))
<BR>[Address Reference Count : 2]<UL><LI> progress_bar.o(.constdata)
<LI> slider.o(.constdata)
</UL>
<P><STRONG><a name="[3b6]"></a>widget_on_paint_self</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, widget.o(i.widget_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = widget_on_paint_self &rArr; widget_dispatch &rArr; emitter_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>

<P><STRONG><a name="[b9]"></a>widget_on_paint_self_default</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_paint_self_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3b7]"></a>widget_on_pointer_down</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, widget.o(i.widget_on_pointer_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + In Cycle
<LI>Call Chain = widget_on_pointer_down &rArr;  widget_on_pointer_down (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_down
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_find_target
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_down
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_dispatch_input_event
</UL>

<P><STRONG><a name="[bb]"></a>widget_on_pointer_down_default</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_pointer_down_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3b8]"></a>widget_on_pointer_move</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, widget.o(i.widget_on_pointer_move))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + In Cycle
<LI>Call Chain = widget_on_pointer_move &rArr;  widget_on_pointer_move (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_move
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_find_target
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_move
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_dispatch_input_event
</UL>

<P><STRONG><a name="[bc]"></a>widget_on_pointer_move_default</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_pointer_move_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3b9]"></a>widget_on_pointer_up</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, widget.o(i.widget_on_pointer_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = widget_on_pointer_up &rArr;  widget_on_pointer_up (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_up
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_up
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_dispatch_input_event
</UL>

<P><STRONG><a name="[bd]"></a>widget_on_pointer_up_default</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_on_pointer_up_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[3b4]"></a>widget_paint</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, widget.o(i.widget_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_untranslate
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_translate
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_self
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_done
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_children
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_background
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_paint_children_default
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_on_paint_children
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_normal
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_prepare
</UL>

<P><STRONG><a name="[240]"></a>widget_paint_helper</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, widget.o(i.widget_paint_helper))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = widget_paint_helper &rArr; widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_draw_icon_text
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;group_box_on_paint_self
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_paint_self
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_on_paint_self
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_on_paint_self
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_on_paint_self
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_on_paint_self
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_on_paint_self
</UL>

<P><STRONG><a name="[3ba]"></a>widget_remove_child</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, widget.o(i.widget_remove_child))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = widget_remove_child &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child_real
</UL>

<P><STRONG><a name="[386]"></a>widget_set_children_layout_params</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, layout.o(i.widget_set_children_layout_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = widget_set_children_layout_params &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_prop
</UL>

<P><STRONG><a name="[290]"></a>widget_set_name</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, widget.o(i.widget_set_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = widget_set_name &rArr; str_set &rArr; str_set_with_len &rArr; str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_title_create
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_client_create
</UL>

<P><STRONG><a name="[38a]"></a>widget_set_parsed_self_layout_params</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, layout.o(i.widget_set_parsed_self_layout_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = widget_set_parsed_self_layout_params &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[2a4]"></a>widget_set_prop</STRONG> (Thumb, 402 bytes, Stack size 32 bytes, widget.o(i.widget_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = widget_set_prop &rArr; wstr_from_value &rArr; wstr_from_int &rArr; wstr_set_utf8 &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_str
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_update_style
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_name
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_set_prop
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_prop
</UL>

<P><STRONG><a name="[b5]"></a>widget_set_prop_default</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_set_prop_default))
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[23e]"></a>widget_set_state</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(i.widget_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = widget_set_state &rArr; widget_update_style &rArr; theme_find_style
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_update_style
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_update_status
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_on_event
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;group_box_create
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_value_only
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_create
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_create
</UL>

<P><STRONG><a name="[34f]"></a>widget_to_local</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, widget.o(i.widget_to_local))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = widget_to_local
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_find_target_default
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_find_target
</UL>

<P><STRONG><a name="[354]"></a>widget_ungrab</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, widget.o(i.widget_ungrab))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = widget_ungrab &rArr; widget_ungrab_default
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_ungrab_default
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
</UL>

<P><STRONG><a name="[c1]"></a>widget_ungrab_default</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, widget_vtable.o(i.widget_ungrab_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = widget_ungrab_default
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_ungrab
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_vtable.o(.constdata)
</UL>
<P><STRONG><a name="[28f]"></a>widget_update_style</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, widget.o(i.widget_update_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = widget_update_style &rArr; theme_find_style
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_find_style
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_title_create
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_client_create
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>

<P><STRONG><a name="[3aa]"></a>widget_vtable_default</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widget_vtable.o(i.widget_vtable_default))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>

<P><STRONG><a name="[6b]"></a>window_animator_begin_frame_overlap</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, window_animator.o(i.window_animator_begin_frame_overlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = window_animator_begin_frame_overlap &rArr; canvas_begin_frame &rArr; canvas_set_clip_rect &rArr; lcd_set_clip_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_begin_frame
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Address Reference Count : 4]<UL><LI> window_animator_fb.o(i.window_animator_create_bottom_to_top)
<LI> window_animator_fb.o(i.window_animator_create_fade)
<LI> window_animator_fb.o(i.window_animator_create_scale)
<LI> window_animator_fb.o(i.window_animator_create_top_to_bottom)
</UL>
<P><STRONG><a name="[3c5]"></a>window_animator_create_for_close</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, window_animator_fb.o(i.window_animator_create_for_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = window_animator_create_for_close &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_prepare
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_close_animation
</UL>

<P><STRONG><a name="[3c7]"></a>window_animator_create_for_open</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, window_animator_fb.o(i.window_animator_create_for_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = window_animator_create_for_open &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_prepare
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_open_animation
</UL>

<P><STRONG><a name="[3d4]"></a>window_animator_destroy</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, window_animator.o(i.window_animator_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = window_animator_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_animation
</UL>

<P><STRONG><a name="[3c9]"></a>window_animator_update</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, window_animator.o(i.window_animator_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_update &rArr; canvas_begin_frame &rArr; canvas_set_clip_rect &rArr; lcd_set_clip_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_end_frame
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_begin_frame
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_animation
</UL>

<P><STRONG><a name="[332]"></a>window_close</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, window.o(i.window_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = window_close &rArr; window_manager_remove_child &rArr; window_manager_check_if_need_close_animation &rArr; window_animator_create_for_close &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_close
</UL>

<P><STRONG><a name="[388]"></a>window_create</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, window.o(i.window_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = window_create &rArr; window_manager_add_child &rArr; idle_add &rArr; idle_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_add_child
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_init
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default_on_widget_start
</UL>

<P><STRONG><a name="[294]"></a>window_manager</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, window_manager.o(i.window_manager))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_sleep
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_create
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_init
</UL>

<P><STRONG><a name="[295]"></a>window_manager_add_child</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, window_manager.o(i.window_manager_add_child))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = window_manager_add_child &rArr; idle_add &rArr; idle_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_add
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_add_child
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_create
</UL>

<P><STRONG><a name="[37e]"></a>window_manager_create</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(i.window_manager_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = window_manager_create &rArr; window_manager_init &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[318]"></a>window_manager_dispatch_input_event</STRONG> (Thumb, 374 bytes, Stack size 24 bytes, window_manager.o(i.window_manager_dispatch_input_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = window_manager_dispatch_input_event &rArr; widget_on_pointer_down &rArr;  widget_on_pointer_down (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_up
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_move
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_pointer_down
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_keyup
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_on_keydown
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_update_key_status
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_shift_key
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_dispatch_events
</UL>

<P><STRONG><a name="[cc]"></a>window_manager_find_target</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, window_manager.o(i.window_manager_find_target))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = window_manager_find_target &rArr; widget_to_local
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_to_local
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.constdata)
</UL>
<P><STRONG><a name="[3d0]"></a>window_manager_find_top_window_index</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, window_manager.o(i.window_manager_find_top_window_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = window_manager_find_top_window_index
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_get_top_window
</UL>

<P><STRONG><a name="[3cf]"></a>window_manager_get_top_window</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, window_manager.o(i.window_manager_get_top_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = window_manager_get_top_window &rArr; window_manager_find_top_window_index
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_child
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_find_top_window_index
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child_real
</UL>

<P><STRONG><a name="[3cc]"></a>window_manager_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, window_manager.o(i.window_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = window_manager_init &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_init
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_create
</UL>

<P><STRONG><a name="[c8]"></a>window_manager_on_paint_children</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, window_manager.o(i.window_manager_on_paint_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = window_manager_on_paint_children &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.constdata)
</UL>
<P><STRONG><a name="[32b]"></a>window_manager_paint</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, window_manager.o(i.window_manager_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = window_manager_paint &rArr; window_manager_paint_normal &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_global_alpha
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_normal
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint_animation
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_run
</UL>

<P><STRONG><a name="[292]"></a>window_manager_remove_child</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, window_manager.o(i.window_manager_remove_child))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = window_manager_remove_child &rArr; window_manager_check_if_need_close_animation &rArr; window_animator_create_for_close &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_add
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_close_animation
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child_real
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_close
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_close
</UL>

<P><STRONG><a name="[324]"></a>window_manager_resize</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, window_manager.o(i.window_manager_resize))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = window_manager_resize &rArr; widget_move_resize &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_init
</UL>

<P><STRONG><a name="[37f]"></a>window_manager_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, window_manager.o(i.window_manager_set))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_internal
</UL>

<P><STRONG><a name="[214]"></a>window_open</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ui_builder_default.o(i.window_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = window_open &rArr; resource_manager_unref &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_unref
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_ref
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_loader_load
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_ui_loader
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_builder_default
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_show_window2
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_show_window1
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_show_dialog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_init
</UL>

<P><STRONG><a name="[3d8]"></a>wstr_from_float</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, wstr.o(i.wstr_from_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = wstr_from_float &rArr; wstr_set_utf8 &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set_utf8
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
</UL>

<P><STRONG><a name="[3d9]"></a>wstr_from_int</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, wstr.o(i.wstr_from_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = wstr_from_int &rArr; wstr_set_utf8 &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set_utf8
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_itoa
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
</UL>

<P><STRONG><a name="[3bb]"></a>wstr_from_value</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, wstr.o(i.wstr_from_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = wstr_from_value &rArr; wstr_from_int &rArr; wstr_set_utf8 &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set_utf8
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_wstr
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_str
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_int
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_float
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
</UL>

<P><STRONG><a name="[3a9]"></a>wstr_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wstr.o(i.wstr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = wstr_init &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_extend
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_init
</UL>

<P><STRONG><a name="[2bd]"></a>wstr_pop</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wstr.o(i.wstr_pop))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_key_down
</UL>

<P><STRONG><a name="[2bb]"></a>wstr_push</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wstr.o(i.wstr_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = wstr_push &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_extend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_key_down
</UL>

<P><STRONG><a name="[3a4]"></a>wstr_reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wstr.o(i.wstr_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wstr_reset &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
</UL>

<P><STRONG><a name="[2c8]"></a>wstr_set</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wstr.o(i.wstr_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = wstr_set &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcscpy
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_extend
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
</UL>

<P><STRONG><a name="[2c6]"></a>wstr_set_utf8</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, wstr.o(i.wstr_set_utf8))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = wstr_set_utf8 &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utf8_to_utf16
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_extend
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_value
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_int
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_from_float
</UL>

<P><STRONG><a name="[9]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[2ad]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_out
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_inout
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_out
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_in
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_in
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_out
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_in
</UL>

<P><STRONG><a name="[3da]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[201]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[3dd]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[3e0]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[3e4]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[20e]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[3e2]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[398]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_bool
</UL>

<P><STRONG><a name="[3e3]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[203]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[3e5]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[204]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[430]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[206]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[431]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[2ab]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_out
</UL>

<P><STRONG><a name="[3e6]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[3e9]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[202]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_in
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[3e7]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[3dc]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[3df]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[338]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[3e8]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[205]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_out
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_in
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[3ea]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[35c]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[200]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[3ec]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[2aa]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_out
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_inout
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_out
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_in
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_in
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_out
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_in
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_out
</UL>

<P><STRONG><a name="[3ed]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[2a8]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_in
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_cubic_out
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_out
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_inout
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_out
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_inout
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_in
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atof
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_update_percent
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_update_percent
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_update_percent
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_update_percent
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_update_percent
</UL>

<P><STRONG><a name="[3ef]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[3f3]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[24d]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_out
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_inout
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_w
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_h
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_icon
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atof
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_dragger_rect
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_update
</UL>

<P><STRONG><a name="[3f1]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[2ae]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_out
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_in
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_in
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_bool
</UL>

<P><STRONG><a name="[3f2]"></a>_fcmpeq</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[24f]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_w
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_h
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_icon
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_dragger_rect
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_prev
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_curr
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_prev
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_curr
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_prev
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_curr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_prev
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_curr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_prev
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_curr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_prev
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_curr
</UL>

<P><STRONG><a name="[3f4]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[352]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_curr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_curr
</UL>

<P><STRONG><a name="[3f5]"></a>_ffixu</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[24c]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_w
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_h
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_icon
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atof
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_dragger_rect
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_prev
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_curr
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_prev
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_curr
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_prev
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_curr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_prev
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_curr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_prev
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_curr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_prev
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_curr
</UL>

<P><STRONG><a name="[432]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[39a]"></a>__aeabi_ul2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
</UL>

<P><STRONG><a name="[433]"></a>_ll_uto_f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll), UNUSED)

<P><STRONG><a name="[399]"></a>__aeabi_l2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
</UL>

<P><STRONG><a name="[434]"></a>_ll_sto_f</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll), UNUSED)

<P><STRONG><a name="[34e]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atof
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_dragger_rect
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_update
</UL>

<P><STRONG><a name="[435]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[260]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_in
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_quadratic_inout
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_out
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_inout
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_inout
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_w
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_h
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
</UL>

<P><STRONG><a name="[3f6]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[3f9]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[261]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_out
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_inout
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_in
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_quadratic_out
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_quadratic_inout
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_quadratic_in
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_out
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_in
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_cubic_out
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_cubic_in
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_out
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_in
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_out
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_inout
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_out
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_inout
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_in
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_w
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale_h
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_scale
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_dragger_rect
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_update_percent
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_prev
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_curr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_update_percent
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_prev
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_curr
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_update_percent
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_prev
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_curr
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_update_percent
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_prev
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_curr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_prev
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_curr
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_update_percent
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_prev
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_curr
</UL>

<P><STRONG><a name="[3f7]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[3ee]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[3db]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[24b]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_icon
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atof
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_update
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_begin_frame_overlap
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_draw_prev
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_prev
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_curr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_draw_prev
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_prev
</UL>

<P><STRONG><a name="[3f8]"></a>_frcmple</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmple_InfNaN
</UL>

<P><STRONG><a name="[2a9]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_out
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_quadratic_out
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_out
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_in
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_in
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_ftoa
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_top_to_bottom_update_percent
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_update_percent
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_fade_update_percent
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_update_percent
</UL>

<P><STRONG><a name="[3fa]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[24e]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_sin_in
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_quadratic_inout
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_inout
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_pow_in
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_out
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_inout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_elastic_in
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_cubic_out
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_out
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_circular_inout
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_out
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_inout
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_out
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_inout
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_back_in
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_icon
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_dragger_rect
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_update_percent
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_prev
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_vtranslate_draw_curr
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_scale_draw_curr
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_update_percent
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_prev
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_htranslate_draw_curr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_bottom_to_top_draw_prev
</UL>

<P><STRONG><a name="[3fc]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[3e1]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[207]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[3fd]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[225]"></a>awtk_touch_init</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, awtk.o(i.awtk_touch_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = awtk_touch_init &rArr; FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetDefaultConfig
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1fe]"></a>SCB_EnableDCache</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, system_mimxrt1052.o(i.SCB_EnableDCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCB_EnableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1fd]"></a>SCB_EnableICache</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, system_mimxrt1052.o(i.SCB_EnableICache))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1c0]"></a>CLOCK_EnableClock</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, pin_mux.o(i.CLOCK_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitSemcPins
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitI2C1Pins
</UL>

<P><STRONG><a name="[1c2]"></a>IOMUXC_SetPinConfig</STRONG> (Thumb, 12 bytes, Stack size 12 bytes, pin_mux.o(i.IOMUXC_SetPinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IOMUXC_SetPinConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitSemcPins
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitI2C1Pins
</UL>

<P><STRONG><a name="[1c1]"></a>IOMUXC_SetPinMux</STRONG> (Thumb, 26 bytes, Stack size 20 bytes, pin_mux.o(i.IOMUXC_SetPinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IOMUXC_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitSemcPins
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitI2C1Pins
</UL>

<P><STRONG><a name="[1bc]"></a>CLOCK_GetDiv</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, board.o(i.CLOCK_GetDiv))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
</UL>

<P><STRONG><a name="[1b7]"></a>SCB_DisableDCache</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, board.o(i.SCB_DisableDCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCB_DisableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
</UL>

<P><STRONG><a name="[1b8]"></a>SCB_EnableDCache</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, board.o(i.SCB_EnableDCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCB_EnableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
</UL>

<P><STRONG><a name="[1b9]"></a>SCB_EnableICache</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, board.o(i.SCB_EnableICache))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
</UL>

<P><STRONG><a name="[1b0]"></a>BOARD_BootClockGate</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, clock_config.o(i.BOARD_BootClockGate))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1af]"></a>CLOCK_SetDiv</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, clock_config.o(i.CLOCK_SetDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1ab]"></a>CLOCK_SetMux</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, clock_config.o(i.CLOCK_SetMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_SetMux
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[1d3]"></a>CLOCK_GetOscFreq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetOscFreq))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[1d0]"></a>CLOCK_GetPeriphClkFreq</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_GetPeriphClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetOscFreq
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[1cd]"></a>CLOCK_ControlGate</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_elcdif.o(i.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>

<P><STRONG><a name="[1cc]"></a>CLOCK_EnableClock</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fsl_elcdif.o(i.CLOCK_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>

<P><STRONG><a name="[1d9]"></a>ELCDIF_GetInstance</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fsl_elcdif.o(i.ELCDIF_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>

<P><STRONG><a name="[1de]"></a>GPIO_GetInstance</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fsl_gpio.o(i.GPIO_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>

<P><STRONG><a name="[1fa]"></a>CLOCK_ControlGate</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_lpuart.o(i.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[1cf]"></a>CLOCK_ControlGate</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_lpi2c.o(i.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>

<P><STRONG><a name="[1ce]"></a>CLOCK_EnableClock</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fsl_lpi2c.o(i.CLOCK_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_EnableClock &rArr; CLOCK_ControlGate
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[1e8]"></a>LPI2C_CommonIRQHandler</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, fsl_lpi2c.o(i.LPI2C_CommonIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C_CommonIRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C3_DriverIRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C2_DriverIRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C1_DriverIRQHandler
</UL>

<P><STRONG><a name="[1f0]"></a>LPI2C_GetCyclesForWidth</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, fsl_lpi2c.o(i.LPI2C_GetCyclesForWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LPI2C_GetCyclesForWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[1ec]"></a>LPI2C_MasterClearStatusFlags</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_MasterClearStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
</UL>

<P><STRONG><a name="[1f1]"></a>LPI2C_MasterEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_MasterEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSetBaudRate
</UL>

<P><STRONG><a name="[1f6]"></a>LPI2C_MasterGetFifoCounts</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_MasterGetFifoCounts))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>

<P><STRONG><a name="[1ea]"></a>LPI2C_MasterGetStatusFlags</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_MasterGetStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterReceive
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CheckForBusyBus
</UL>

<P><STRONG><a name="[1ee]"></a>LPI2C_MasterReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_MasterReset))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[1f3]"></a>LPI2C_MasterWaitForTxReady</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, fsl_lpi2c.o(i.LPI2C_MasterWaitForTxReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetStatusFlags
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetFifoCounts
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferBlocking
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSend
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterReceive
</UL>

<P><STRONG><a name="[1fb]"></a>ConvertRadixNumToString</STRONG> (Thumb, 168 bytes, Stack size 36 bytes, fsl_str.o(i.ConvertRadixNumToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ConvertRadixNumToString
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
</UL>

<P><STRONG><a name="[3e]"></a>DbgConsole_RelocateLog</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, fsl_debug_console.o(i.DbgConsole_RelocateLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DbgConsole_RelocateLog &rArr; LOG_Push &rArr; LOG_Pop &rArr; IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(i.DbgConsole_Printf)
</UL>
<P><STRONG><a name="[21d]"></a>array_extend</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, array.o(i.array_extend))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
</UL>

<P><STRONG><a name="[80]"></a>button_on_event</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, button.o(i.button_on_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = button_on_event &rArr; widget_set_state &rArr; widget_update_style &rArr; theme_find_style
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>button_on_paint_self</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, button.o(i.button_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = button_on_paint_self &rArr; widget_paint_helper &rArr; widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint_helper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.constdata)
</UL>
<P><STRONG><a name="[244]"></a>canvas_do_draw_image</STRONG> (Thumb, 332 bytes, Stack size 72 bytes, canvas.o(i.canvas_do_draw_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image
</UL>

<P><STRONG><a name="[246]"></a>canvas_draw_glyph</STRONG> (Thumb, 160 bytes, Stack size 64 bytes, canvas.o(i.canvas_draw_glyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = canvas_draw_glyph &rArr; lcd_draw_glyph
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_glyph
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_text_impl
</UL>

<P><STRONG><a name="[248]"></a>canvas_draw_hline_impl</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, canvas.o(i.canvas_draw_hline_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = canvas_draw_hline_impl &rArr; lcd_draw_hline
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_hline
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_stroke_rect_impl
</UL>

<P><STRONG><a name="[264]"></a>canvas_draw_text_impl</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, canvas.o(i.canvas_draw_text_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = canvas_draw_text_impl &rArr; canvas_draw_glyph &rArr; lcd_draw_glyph
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_find_glyph
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_glyph
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_text
</UL>

<P><STRONG><a name="[268]"></a>canvas_draw_vline_impl</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, canvas.o(i.canvas_draw_vline_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = canvas_draw_vline_impl &rArr; lcd_draw_vline
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_vline
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_vline
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_stroke_rect_impl
</UL>

<P><STRONG><a name="[26d]"></a>canvas_fill_rect_impl</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, canvas.o(i.canvas_fill_rect_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = canvas_fill_rect_impl &rArr; lcd_fill_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_fill_rect
</UL>

<P><STRONG><a name="[272]"></a>canvas_measure_text_default</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, canvas.o(i.canvas_measure_text_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = canvas_measure_text_default &rArr; font_find_glyph
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_find_glyph
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_measure_text
</UL>

<P><STRONG><a name="[281]"></a>canvas_stroke_rect_impl</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, canvas.o(i.canvas_stroke_rect_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = canvas_stroke_rect_impl &rArr; canvas_draw_vline_impl &rArr; lcd_draw_vline
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_stroke_rect
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_vline_impl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_hline_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_stroke_rect
</UL>

<P><STRONG><a name="[81]"></a>check_button_get_prop</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, check_button.o(i.check_button_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_button_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_uint8
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> check_button.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>check_button_on_event</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, check_button.o(i.check_button_on_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = check_button_on_event &rArr; check_button_set_value &rArr; check_button_set_value_only &rArr; widget_set_state &rArr; widget_update_style &rArr; theme_find_style
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> check_button.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>check_button_on_paint_self</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, check_button.o(i.check_button_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = check_button_on_paint_self &rArr; widget_paint_helper &rArr; widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint_helper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> check_button.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>check_button_set_prop</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, check_button.o(i.check_button_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = check_button_set_prop &rArr; check_button_set_value &rArr; check_button_set_value_only &rArr; widget_set_state &rArr; widget_update_style &rArr; theme_find_style
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_bool
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_value
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> check_button.o(.constdata)
</UL>
<P><STRONG><a name="[284]"></a>check_button_set_value_only</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, check_button.o(i.check_button_set_value_only))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = check_button_set_value_only &rArr; widget_set_state &rArr; widget_update_style &rArr; theme_find_style
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_set_value
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create_radio
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create
</UL>

<P><STRONG><a name="[291]"></a>dialog_close</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dialog.o(i.dialog_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = dialog_close &rArr; window_manager_remove_child &rArr; window_manager_check_if_need_close_animation &rArr; window_animator_create_for_close &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_idle_close
</UL>

<P><STRONG><a name="[89]"></a>dialog_destroy</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dialog.o(i.dialog_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dialog_destroy &rArr; str_reset &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialog.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>dialog_get_prop</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, dialog.o(i.dialog_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dialog_get_prop &rArr; widget_get_prop &rArr; value_set_int
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_str
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_int
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialog.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>dialog_idle_close</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dialog.o(i.dialog_idle_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = dialog_idle_close &rArr; dialog_close &rArr; window_manager_remove_child &rArr; window_manager_check_if_need_close_animation &rArr; window_animator_create_for_close &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialog.o(i.dialog_modal)
</UL>
<P><STRONG><a name="[87]"></a>dialog_on_paint_self</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, dialog.o(i.dialog_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = dialog_on_paint_self &rArr; widget_paint_helper &rArr; widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint_helper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialog.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>dialog_on_relayout_children</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, dialog.o(i.dialog_on_relayout_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = dialog_on_relayout_children &rArr; widget_layout_children &rArr;  widget_layout_children (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_children
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_move_resize
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_set_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialog.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>dialog_set_prop</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, dialog.o(i.dialog_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = dialog_set_prop &rArr; widget_set_prop &rArr; wstr_from_value &rArr; wstr_from_int &rArr; wstr_set_utf8 &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_value
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_on_relayout_children
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialog.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>easing_back_in</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, easing.o(i.easing_back_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = easing_back_in &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>easing_back_inout</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, easing.o(i.easing_back_inout))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = easing_back_inout &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>easing_back_out</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, easing.o(i.easing_back_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = easing_back_out &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>easing_bounce_in</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, easing.o(i.easing_bounce_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = easing_bounce_in &rArr; easing_bounce_out &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_out
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_inout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>easing_bounce_inout</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, easing.o(i.easing_bounce_inout))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = easing_bounce_inout &rArr; easing_bounce_in &rArr; easing_bounce_out &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_out
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_in
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>easing_bounce_out</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, easing.o(i.easing_bounce_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = easing_bounce_out &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_inout
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_bounce_in
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>easing_circular_in</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, easing.o(i.easing_circular_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = easing_circular_in &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>easing_circular_inout</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, easing.o(i.easing_circular_inout))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = easing_circular_inout &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>easing_circular_out</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, easing.o(i.easing_circular_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = easing_circular_out &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>easing_cubic_in</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, easing.o(i.easing_cubic_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = easing_cubic_in &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>easing_cubic_out</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, easing.o(i.easing_cubic_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = easing_cubic_out &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>easing_elastic_in</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, easing.o(i.easing_elastic_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = easing_elastic_in &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>easing_elastic_inout</STRONG> (Thumb, 314 bytes, Stack size 80 bytes, easing.o(i.easing_elastic_inout))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = easing_elastic_inout &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>easing_elastic_out</STRONG> (Thumb, 156 bytes, Stack size 72 bytes, easing.o(i.easing_elastic_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = easing_elastic_out &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>easing_linear</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, easing.o(i.easing_linear))
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>easing_pow_in</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, easing.o(i.easing_pow_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = easing_pow_in &rArr; pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>easing_pow_inout</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, easing.o(i.easing_pow_inout))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = easing_pow_inout &rArr; pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>easing_pow_out</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, easing.o(i.easing_pow_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = easing_pow_out &rArr; pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>easing_quadratic_in</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, easing.o(i.easing_quadratic_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = easing_quadratic_in &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>easing_quadratic_inout</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, easing.o(i.easing_quadratic_inout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = easing_quadratic_inout &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>easing_quadratic_out</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, easing.o(i.easing_quadratic_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = easing_quadratic_out &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>easing_sin_in</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, easing.o(i.easing_sin_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = easing_sin_in &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>easing_sin_inout</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, easing.o(i.easing_sin_inout))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = easing_sin_inout &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>easing_sin_out</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, easing.o(i.easing_sin_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = easing_sin_out &rArr; cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easing.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>edit_get_prop</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, edit.o(i.edit_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = edit_get_prop &rArr; value_set_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_wstr
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_uint32
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_float
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_bool
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_int
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(.constdata)
</UL>
<P><STRONG><a name="[2c9]"></a>edit_is_valid_value</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, edit.o(i.edit_is_valid_value))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_update_status
</UL>

<P><STRONG><a name="[a5]"></a>edit_on_event</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, edit.o(i.edit_on_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = edit_on_event &rArr; timer_add &rArr; timer_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_add
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_update_status
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_key_up
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_key_down
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(.constdata)
</UL>
<P><STRONG><a name="[2b9]"></a>edit_on_key_down</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, edit.o(i.edit_on_key_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = edit_on_key_down &rArr; wstr_push &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_push
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_pop
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcschr
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_update_status
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_event
</UL>

<P><STRONG><a name="[2ba]"></a>edit_on_key_up</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit.o(i.edit_on_key_up))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_event
</UL>

<P><STRONG><a name="[a4]"></a>edit_on_paint_self</STRONG> (Thumb, 314 bytes, Stack size 72 bytes, edit.o(i.edit_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = edit_on_paint_self &rArr; widget_paint_helper &rArr; widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_int
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_color
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wcslen
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_text_color
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_stroke_color
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_font
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_measure_text
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_vline
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint_helper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>edit_set_prop</STRONG> (Thumb, 362 bytes, Stack size 32 bytes, edit.o(i.edit_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = edit_set_prop &rArr; wstr_set_utf8 &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set_utf8
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_wstr
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_uint32
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_str
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_float
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_type_find
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_update_status
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_bool
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>edit_update_carent</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, edit.o(i.edit_update_carent))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = edit_update_carent &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(i.edit_on_event)
</UL>
<P><STRONG><a name="[2b8]"></a>edit_update_status</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, edit.o(i.edit_update_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = edit_update_status &rArr; widget_set_state &rArr; widget_update_style &rArr; theme_find_style
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_is_valid_value
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_set_prop
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_key_down
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_on_event
</UL>

<P><STRONG><a name="[2ce]"></a>emitter_extends</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, emitter.o(i.emitter_extends))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = emitter_extends &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emitter_on
</UL>

<P><STRONG><a name="[a6]"></a>group_box_on_paint_self</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, group_box.o(i.group_box_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = group_box_on_paint_self &rArr; widget_paint_helper &rArr; widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint_helper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> group_box.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>image_get_prop</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, image.o(i.image_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = image_get_prop &rArr; value_set_int
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_int
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_pointer
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>image_on_paint_self</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, image.o(i.image_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = image_on_paint_self &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_color
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_init
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_stroke_rect
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_stroke_color
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_fill_color
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_fill_rect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata)
</UL>
<P><STRONG><a name="[2ff]"></a>image_set_image</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, image.o(i.image_set_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = image_set_image &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_image_name
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_prop
</UL>

<P><STRONG><a name="[a8]"></a>image_set_prop</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, image.o(i.image_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = image_set_prop &rArr; image_set_image_name &rArr; image_manager_load &rArr; image_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_draw_type_find
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_str
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_pointer
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_image_name
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_draw_type
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_image
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata)
</UL>
<P><STRONG><a name="[226]"></a>bitmap_cache_destroy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, image_manager.o(i.bitmap_cache_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bitmap_cache_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_destroy
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_deinit
</UL>

<P><STRONG><a name="[aa]"></a>label_on_paint_self</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, label.o(i.label_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = label_on_paint_self &rArr; widget_paint_helper &rArr; widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint_helper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> label.o(.constdata)
</UL>
<P><STRONG><a name="[32f]"></a>node_merge</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, mem.o(i.node_merge))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_merge2
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_merge
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_merge
</UL>

<P><STRONG><a name="[330]"></a>node_merge2</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, mem.o(i.node_merge2))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_merge
</UL>

<P><STRONG><a name="[ab]"></a>progress_bar_get_prop</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, progress_bar.o(i.progress_bar_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = progress_bar_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_bool
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_uint8
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progress_bar.o(.constdata)
</UL>
<P><STRONG><a name="[ae]"></a>progress_bar_on_paint_self</STRONG> (Thumb, 680 bytes, Stack size 224 bytes, progress_bar.o(i.progress_bar_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = progress_bar_on_paint_self &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_int
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_color
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_init
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_stroke_rect
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_text_color
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_stroke_color
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_font
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_fill_color
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_measure_text
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_fill_rect
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_text
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_itoa
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progress_bar.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>progress_bar_set_prop</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, progress_bar.o(i.progress_bar_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = progress_bar_set_prop &rArr; progress_bar_set_value &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_bool
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_vertical
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_value
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_show_text
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progress_bar.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>res_cmp_type</STRONG> (Thumb, 16 bytes, Stack size 12 bytes, resource_manager.o(i.res_cmp_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = res_cmp_type
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resource_manager.o(i.resource_manager_clear_cache)
</UL>
<P><STRONG><a name="[33f]"></a>resource_info_destroy</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, resource_manager.o(i.resource_info_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = resource_info_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_deinit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_info_unref
</UL>

<P><STRONG><a name="[342]"></a>resource_info_ref</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, resource_manager.o(i.resource_info_ref))
<BR><BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_ref
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_manager_add
</UL>

<P><STRONG><a name="[5e]"></a>resource_info_unref</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, resource_manager.o(i.resource_info_unref))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = resource_info_unref &rArr; resource_info_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resource_info_destroy
</UL>
<BR>[Address Reference Count : 2]<UL><LI> resource_manager.o(i.resource_manager_unref)
<LI> resource_manager.o(i.resource_manager_clear_cache)
</UL>
<P><STRONG><a name="[34d]"></a>slider_get_dragger_rect</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, slider.o(i.slider_get_dragger_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = slider_get_dragger_rect &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_paint_self
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
</UL>

<P><STRONG><a name="[b0]"></a>slider_get_prop</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, slider.o(i.slider_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = slider_get_prop &rArr; value_set_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_bool
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_int
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>slider_on_event</STRONG> (Thumb, 414 bytes, Stack size 72 bytes, slider.o(i.slider_on_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = slider_on_event &rArr; slider_set_value_internal &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_state
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_ungrab
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_to_local
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_grab
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_value_internal
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_dragger_rect
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect_contains
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>slider_on_paint_self</STRONG> (Thumb, 694 bytes, Stack size 136 bytes, slider.o(i.slider_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = slider_on_paint_self &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_int
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_get_color
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_set_fill_color
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_fill_rect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_draw_image_ex
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager_load
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_manager
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_get_dragger_rect
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>slider_set_prop</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, slider.o(i.slider_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = slider_set_prop &rArr; slider_set_value &rArr; slider_set_value_internal &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_int
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_bool
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_vertical
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_value
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_step
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_min
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_max
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata)
</UL>
<P><STRONG><a name="[353]"></a>slider_set_value_internal</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, slider.o(i.slider_set_value_internal))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = slider_set_value_internal &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_set_value
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_on_event
</UL>

<P><STRONG><a name="[35e]"></a>str_extend</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, str.o(i.str_extend))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_init
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_set_with_len
</UL>

<P><STRONG><a name="[380]"></a>tk_itoa_simple</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, utils.o(i.tk_itoa_simple))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tk_itoa_simple
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_itoa
</UL>

<P><STRONG><a name="[371]"></a>tk_strtol_internal</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, utils.o(i.tk_strtol_internal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tk_strtol_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_atof
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_strtol
</UL>

<P><STRONG><a name="[3ae]"></a>widget_lookup_all</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, widget.o(i.widget_lookup_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = widget_lookup_all &rArr;  widget_lookup_all (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_eq
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup_all
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup_all
</UL>

<P><STRONG><a name="[3af]"></a>widget_lookup_child</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, widget.o(i.widget_lookup_child))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = widget_lookup_child &rArr; str_eq
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_eq
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_lookup
</UL>

<P><STRONG><a name="[3ab]"></a>widget_set_dirty</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, widget.o(i.widget_set_dirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_dirty
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_dirty
</UL>

<P><STRONG><a name="[c7]"></a>window_destroy</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, window.o(i.window_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = window_destroy &rArr; str_reset &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>window_get_prop</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, window.o(i.window_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = window_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_str
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>window_on_paint_self</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, window.o(i.window_on_paint_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = window_on_paint_self &rArr; widget_paint_helper &rArr; widget_draw_icon_text &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint_helper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>window_set_prop</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, window.o(i.window_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = window_set_prop &rArr; str_from_value &rArr; str_from_int &rArr; str_set &rArr; str_set_with_len &rArr; str_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_from_value
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>on_window_destroy</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, window_manager.o(i.on_window_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = on_window_destroy &rArr; window_manager_remove_child_real &rArr; widget_remove_child &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_find
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child_real
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(i.window_manager_add_child)
</UL>
<P><STRONG><a name="[7d]"></a>timer_enable_user_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, window_manager.o(i.timer_enable_user_input))
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(i.window_manager_paint_animation)
</UL>
<P><STRONG><a name="[3ca]"></a>window_manager_check_if_need_close_animation</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, window_manager.o(i.window_manager_check_if_need_close_animation))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = window_manager_check_if_need_close_animation &rArr; window_animator_create_for_close &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_str
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_find_prev_window
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_for_close
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child
</UL>

<P><STRONG><a name="[7c]"></a>window_manager_check_if_need_open_animation</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, window_manager.o(i.window_manager_check_if_need_open_animation))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = window_manager_check_if_need_open_animation &rArr; window_animator_create_for_open &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_str
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_get_prop
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_find_prev_window
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_for_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(i.window_manager_add_child)
</UL>
<P><STRONG><a name="[3cb]"></a>window_manager_find_prev_window</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, window_manager.o(i.window_manager_find_prev_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = window_manager_find_prev_window
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_open_animation
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_check_if_need_close_animation
</UL>

<P><STRONG><a name="[ca]"></a>window_manager_grab</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, window_manager.o(i.window_manager_grab))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = window_manager_grab &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_push
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>window_manager_idle_destroy_window</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, window_manager.o(i.window_manager_idle_destroy_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = window_manager_idle_destroy_window &rArr; widget_destroy &rArr; emitter_destroy &rArr; emitter_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(i.window_manager_remove_child)
</UL>
<P><STRONG><a name="[c9]"></a>window_manager_invalidate</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, window_manager.o(i.window_manager_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = window_manager_invalidate &rArr; rect_merge
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect_merge
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.constdata)
</UL>
<P><STRONG><a name="[3d2]"></a>window_manager_paint_animation</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, window_manager.o(i.window_manager_paint_animation))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = window_manager_paint_animation &rArr; timer_add &rArr; timer_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_add
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_now_ms
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_update
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint
</UL>

<P><STRONG><a name="[3d3]"></a>window_manager_paint_normal</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, window_manager.o(i.window_manager_paint_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = window_manager_paint_normal &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_end_frame
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_begin_frame
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect_merge
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint
</UL>

<P><STRONG><a name="[334]"></a>window_manager_remove_child_real</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, window_manager.o(i.window_manager_remove_child_real))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_manager_remove_child_real &rArr; widget_remove_child &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_remove_child
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_get_top_window
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_remove_child
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_window_destroy
</UL>

<P><STRONG><a name="[3ce]"></a>window_manager_shift_key</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, window_manager.o(i.window_manager_shift_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = window_manager_shift_key
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_dispatch_input_event
</UL>

<P><STRONG><a name="[cb]"></a>window_manager_ungrab</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, window_manager.o(i.window_manager_ungrab))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = window_manager_ungrab &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;array_remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.constdata)
</UL>
<P><STRONG><a name="[3cd]"></a>window_manager_update_key_status</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, window_manager.o(i.window_manager_update_key_status))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_dispatch_input_event
</UL>

<P><STRONG><a name="[3d7]"></a>wstr_extend</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wstr.o(i.wstr_extend))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set_utf8
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_set
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_push
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wstr_init
</UL>

<P><STRONG><a name="[36f]"></a>tk_add_font</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, tk.o(i.tk_add_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = tk_add_font &rArr; font_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager_add
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_bitmap_create
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_init_resources
</UL>

<P><STRONG><a name="[376]"></a>tk_exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tk.o(i.tk_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = tk_exit &rArr; tk_deinit_internal &rArr; locale_destroy &rArr; locale_deinit &rArr; resource_manager_unref &rArr; array_remove &rArr; array_find_index
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_destroy
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_deinit_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_run
</UL>

<P><STRONG><a name="[234]"></a>blend_a</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, blend_image_565_565.o(i.blend_a))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_with_alpha
</UL>

<P><STRONG><a name="[22a]"></a>blend_image_with_alpha</STRONG> (Thumb, 516 bytes, Stack size 120 bytes, blend_image_565_565.o(i.blend_image_with_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = blend_image_with_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_565_565
</UL>

<P><STRONG><a name="[229]"></a>blend_image_without_alpha</STRONG> (Thumb, 484 bytes, Stack size 120 bytes, blend_image_565_565.o(i.blend_image_without_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = blend_image_without_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_565_565
</UL>

<P><STRONG><a name="[235]"></a>blend_a</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, blend_image_565_8888.o(i.blend_a))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_without_alpha
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_with_alpha
</UL>

<P><STRONG><a name="[22d]"></a>blend_image_with_alpha</STRONG> (Thumb, 516 bytes, Stack size 120 bytes, blend_image_565_8888.o(i.blend_image_with_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = blend_image_with_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_565_8888
</UL>

<P><STRONG><a name="[22c]"></a>blend_image_without_alpha</STRONG> (Thumb, 516 bytes, Stack size 120 bytes, blend_image_565_8888.o(i.blend_image_without_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = blend_image_without_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_565_8888
</UL>

<P><STRONG><a name="[236]"></a>blend_a</STRONG> (Thumb, 218 bytes, Stack size 60 bytes, blend_image_8888_565.o(i.blend_a))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_with_alpha
</UL>

<P><STRONG><a name="[230]"></a>blend_image_with_alpha</STRONG> (Thumb, 516 bytes, Stack size 120 bytes, blend_image_8888_565.o(i.blend_image_with_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = blend_image_with_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_8888_565
</UL>

<P><STRONG><a name="[22f]"></a>blend_image_without_alpha</STRONG> (Thumb, 504 bytes, Stack size 128 bytes, blend_image_8888_565.o(i.blend_image_without_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = blend_image_without_alpha &rArr; rgb565_to_8888
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb565_to_8888
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_8888_565
</UL>

<P><STRONG><a name="[238]"></a>rgb565_to_8888</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, blend_image_8888_565.o(i.rgb565_to_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rgb565_to_8888
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_without_alpha
</UL>

<P><STRONG><a name="[237]"></a>blend_a</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, blend_image_8888_8888.o(i.blend_a))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_without_alpha
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_with_alpha
</UL>

<P><STRONG><a name="[233]"></a>blend_image_with_alpha</STRONG> (Thumb, 516 bytes, Stack size 120 bytes, blend_image_8888_8888.o(i.blend_image_with_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = blend_image_with_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_8888_8888
</UL>

<P><STRONG><a name="[232]"></a>blend_image_without_alpha</STRONG> (Thumb, 516 bytes, Stack size 120 bytes, blend_image_8888_8888.o(i.blend_image_without_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = blend_image_without_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_a
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_image_8888_8888
</UL>

<P><STRONG><a name="[239]"></a>blend_pixel</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, lcd_mem_rgb565.o(i.blend_pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = blend_pixel &rArr; to_color
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_draw_vline
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_draw_points
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_draw_hline
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_draw_glyph
</UL>

<P><STRONG><a name="[49]"></a>lcd_mem_begin_frame</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_mem_rgb565.o(i.lcd_mem_begin_frame))
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[304]"></a>lcd_mem_create</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, lcd_mem_rgb565.o(i.lcd_mem_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lcd_mem_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_alloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_info
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_create_double_fb
</UL>

<P><STRONG><a name="[306]"></a>lcd_mem_create_double_fb</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, lcd_mem_rgb565.o(i.lcd_mem_create_double_fb))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lcd_mem_create_double_fb &rArr; lcd_mem_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_create
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_rgb565_create_double_fb
</UL>

<P><STRONG><a name="[54]"></a>lcd_mem_destroy</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_mem_rgb565.o(i.lcd_mem_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lcd_mem_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[4e]"></a>lcd_mem_draw_glyph</STRONG> (Thumb, 206 bytes, Stack size 72 bytes, lcd_mem_rgb565.o(i.lcd_mem_draw_glyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lcd_mem_draw_glyph &rArr; blend_pixel &rArr; to_color
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_pixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[4b]"></a>lcd_mem_draw_hline</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, lcd_mem_rgb565.o(i.lcd_mem_draw_hline))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lcd_mem_draw_hline &rArr; blend_pixel &rArr; to_color
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_pixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[4d]"></a>lcd_mem_draw_image</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, lcd_mem_rgb565.o(i.lcd_mem_draw_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lcd_mem_draw_image &rArr; soft_blend_image &rArr; blend_image_8888_8888 &rArr; blend_image_without_alpha &rArr; blend_a
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_to_bitmap
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_copy_image
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_blend_image
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[4f]"></a>lcd_mem_draw_points</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, lcd_mem_rgb565.o(i.lcd_mem_draw_points))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lcd_mem_draw_points &rArr; blend_pixel &rArr; to_color
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_pixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[4a]"></a>lcd_mem_draw_vline</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, lcd_mem_rgb565.o(i.lcd_mem_draw_vline))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lcd_mem_draw_vline &rArr; blend_pixel &rArr; to_color
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_pixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[53]"></a>lcd_mem_end_frame</STRONG> (Thumb, 100 bytes, Stack size 112 bytes, lcd_mem_rgb565.o(i.lcd_mem_end_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = lcd_mem_end_frame &rArr; soft_copy_image &rArr; tk_pixel_copy &rArr; tk_memcpy32
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_init_online_fb
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_init_offline_fb
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_copy_image
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[4c]"></a>lcd_mem_fill_rect</STRONG> (Thumb, 52 bytes, Stack size 80 bytes, lcd_mem_rgb565.o(i.lcd_mem_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lcd_mem_fill_rect &rArr; soft_fill_rect &rArr; tk_memset16
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_to_bitmap
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_fill_rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[50]"></a>lcd_mem_get_point_color</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, lcd_mem_rgb565.o(i.lcd_mem_get_point_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lcd_mem_get_point_color &rArr; to_color
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_color
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[51]"></a>lcd_mem_get_vgcanvas</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_mem_rgb565.o(i.lcd_mem_get_vgcanvas))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_mem_get_vgcanvas &rArr; vgcanvas_create
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vgcanvas_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[30b]"></a>lcd_mem_init_offline_fb</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lcd_mem_rgb565.o(i.lcd_mem_init_offline_fb))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_end_frame
</UL>

<P><STRONG><a name="[30a]"></a>lcd_mem_init_online_fb</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lcd_mem_rgb565.o(i.lcd_mem_init_online_fb))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_end_frame
</UL>

<P><STRONG><a name="[52]"></a>lcd_mem_take_snapshot</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, lcd_mem_rgb565.o(i.lcd_mem_take_snapshot))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lcd_mem_take_snapshot &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_alloc
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_create)
</UL>
<P><STRONG><a name="[307]"></a>lcd_mem_to_bitmap</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lcd_mem_rgb565.o(i.lcd_mem_to_bitmap))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_fill_rect
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_draw_image
</UL>

<P><STRONG><a name="[55]"></a>snapshot_destroy</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_mem_rgb565.o(i.snapshot_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = snapshot_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_mem_rgb565.o(i.lcd_mem_take_snapshot)
</UL>
<P><STRONG><a name="[23a]"></a>to_color</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_mem_rgb565.o(i.to_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = to_color
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_mem_get_point_color
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blend_pixel
</UL>

<P><STRONG><a name="[65]"></a>ui_builder_default_on_end</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ui_builder_default.o(i.ui_builder_default_on_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = ui_builder_default_on_end &rArr; widget_layout &rArr; widget_layout_children &rArr;  widget_layout_children (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_builder_default.o(i.ui_builder_default)
</UL>
<P><STRONG><a name="[64]"></a>ui_builder_default_on_widget_end</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ui_builder_default.o(i.ui_builder_default_on_widget_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_builder_default.o(i.ui_builder_default)
</UL>
<P><STRONG><a name="[62]"></a>ui_builder_default_on_widget_prop</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, ui_builder_default.o(i.ui_builder_default_on_widget_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ui_builder_default_on_widget_prop &rArr; widget_set_prop &rArr; wstr_from_value &rArr; wstr_from_int &rArr; wstr_set_utf8 &rArr; wstr_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_prop
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_set_str
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_children_layout_params
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_layout_parser
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_builder_default.o(i.ui_builder_default)
</UL>
<P><STRONG><a name="[63]"></a>ui_builder_default_on_widget_prop_end</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ui_builder_default.o(i.ui_builder_default_on_widget_prop_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_builder_default.o(i.ui_builder_default)
</UL>
<P><STRONG><a name="[61]"></a>ui_builder_default_on_widget_start</STRONG> (Thumb, 378 bytes, Stack size 64 bytes, ui_builder_default.o(i.ui_builder_default_on_widget_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = ui_builder_default_on_widget_start &rArr; dialog_create &rArr; dialog_title_create &rArr; label_create &rArr; widget_init &rArr; widget_add_child &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_create
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_create
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;group_box_create
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_create
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create_radio
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_button_create
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_create
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_set_parsed_self_layout_params
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_layout_calc
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_create
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_create
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_create
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_create
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_builder_default.o(i.ui_builder_default)
</UL>
<P><STRONG><a name="[67]"></a>window_animator_close_destroy</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, window_animator_fb.o(i.window_animator_close_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = window_animator_close_destroy &rArr; widget_destroy &rArr; emitter_destroy &rArr; emitter_deinit &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_destroy
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_open_destroy
</UL>
<BR>[Address Reference Count : 6]<UL><LI> window_animator_fb.o(i.window_animator_create_bottom_to_top)
<LI> window_animator_fb.o(i.window_animator_create_fade)
<LI> window_animator_fb.o(i.window_animator_create_htranslate)
<LI> window_animator_fb.o(i.window_animator_create_scale)
<LI> window_animator_fb.o(i.window_animator_create_top_to_bottom)
<LI> window_animator_fb.o(i.window_animator_create_vtranslate)
</UL>
<P><STRONG><a name="[3bd]"></a>window_animator_create</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = window_animator_create &rArr; window_animator_create_vtranslate &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_vtranslate
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_top_to_bottom
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_scale
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_htranslate
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_fade
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_bottom_to_top
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_for_open
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_for_close
</UL>

<P><STRONG><a name="[3c1]"></a>window_animator_create_bottom_to_top</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_create_bottom_to_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_animator_create_bottom_to_top &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
</UL>

<P><STRONG><a name="[3c3]"></a>window_animator_create_fade</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_create_fade))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_animator_create_fade &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
</UL>

<P><STRONG><a name="[3bf]"></a>window_animator_create_htranslate</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_create_htranslate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_animator_create_htranslate &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
</UL>

<P><STRONG><a name="[3be]"></a>window_animator_create_scale</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_create_scale))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_animator_create_scale &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
</UL>

<P><STRONG><a name="[3c2]"></a>window_animator_create_top_to_bottom</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_create_top_to_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_animator_create_top_to_bottom &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
</UL>

<P><STRONG><a name="[3c0]"></a>window_animator_create_vtranslate</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_create_vtranslate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_animator_create_vtranslate &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_calloc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;easing_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create
</UL>

<P><STRONG><a name="[6a]"></a>window_animator_open_bottom_to_top_draw_curr</STRONG> (Thumb, 188 bytes, Stack size 80 bytes, window_animator_fb.o(i.window_animator_open_bottom_to_top_draw_curr))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = window_animator_open_bottom_to_top_draw_curr &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_global_alpha
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_bottom_to_top)
</UL>
<P><STRONG><a name="[69]"></a>window_animator_open_bottom_to_top_draw_prev</STRONG> (Thumb, 306 bytes, Stack size 72 bytes, window_animator_fb.o(i.window_animator_open_bottom_to_top_draw_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_open_bottom_to_top_draw_prev &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_bottom_to_top)
</UL>
<P><STRONG><a name="[68]"></a>window_animator_open_bottom_to_top_update_percent</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_open_bottom_to_top_update_percent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = window_animator_open_bottom_to_top_update_percent &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_bottom_to_top)
</UL>
<P><STRONG><a name="[66]"></a>window_animator_open_destroy</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, window_animator_fb.o(i.window_animator_open_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = window_animator_open_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_destroy
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_close_destroy
</UL>
<BR>[Address Reference Count : 6]<UL><LI> window_animator_fb.o(i.window_animator_create_bottom_to_top)
<LI> window_animator_fb.o(i.window_animator_create_fade)
<LI> window_animator_fb.o(i.window_animator_create_htranslate)
<LI> window_animator_fb.o(i.window_animator_create_scale)
<LI> window_animator_fb.o(i.window_animator_create_top_to_bottom)
<LI> window_animator_fb.o(i.window_animator_create_vtranslate)
</UL>
<P><STRONG><a name="[6e]"></a>window_animator_open_fade_draw_curr</STRONG> (Thumb, 174 bytes, Stack size 72 bytes, window_animator_fb.o(i.window_animator_open_fade_draw_curr))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_open_fade_draw_curr &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_global_alpha
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_fade)
</UL>
<P><STRONG><a name="[6d]"></a>window_animator_open_fade_draw_prev</STRONG> (Thumb, 262 bytes, Stack size 64 bytes, window_animator_fb.o(i.window_animator_open_fade_draw_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = window_animator_open_fade_draw_prev &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_fade)
</UL>
<P><STRONG><a name="[6c]"></a>window_animator_open_fade_update_percent</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_open_fade_update_percent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = window_animator_open_fade_update_percent
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_fade)
</UL>
<P><STRONG><a name="[71]"></a>window_animator_open_htranslate_draw_curr</STRONG> (Thumb, 176 bytes, Stack size 72 bytes, window_animator_fb.o(i.window_animator_open_htranslate_draw_curr))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_open_htranslate_draw_curr &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_htranslate)
</UL>
<P><STRONG><a name="[70]"></a>window_animator_open_htranslate_draw_prev</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, window_animator_fb.o(i.window_animator_open_htranslate_draw_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_open_htranslate_draw_prev &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_htranslate)
</UL>
<P><STRONG><a name="[6f]"></a>window_animator_open_htranslate_update_percent</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, window_animator_fb.o(i.window_animator_open_htranslate_update_percent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = window_animator_open_htranslate_update_percent &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_htranslate)
</UL>
<P><STRONG><a name="[74]"></a>window_animator_open_scale_draw_curr</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, window_animator_fb.o(i.window_animator_open_scale_draw_curr))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_open_scale_draw_curr &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_global_alpha
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_scale)
</UL>
<P><STRONG><a name="[73]"></a>window_animator_open_scale_draw_prev</STRONG> (Thumb, 262 bytes, Stack size 64 bytes, window_animator_fb.o(i.window_animator_open_scale_draw_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = window_animator_open_scale_draw_prev &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_scale)
</UL>
<P><STRONG><a name="[72]"></a>window_animator_open_scale_update_percent</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_open_scale_update_percent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = window_animator_open_scale_update_percent &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_scale)
</UL>
<P><STRONG><a name="[77]"></a>window_animator_open_top_to_bottom_draw_curr</STRONG> (Thumb, 148 bytes, Stack size 80 bytes, window_animator_fb.o(i.window_animator_open_top_to_bottom_draw_curr))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = window_animator_open_top_to_bottom_draw_curr &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_global_alpha
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_top_to_bottom)
</UL>
<P><STRONG><a name="[76]"></a>window_animator_open_top_to_bottom_draw_prev</STRONG> (Thumb, 300 bytes, Stack size 72 bytes, window_animator_fb.o(i.window_animator_open_top_to_bottom_draw_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_open_top_to_bottom_draw_prev &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_top_to_bottom)
</UL>
<P><STRONG><a name="[75]"></a>window_animator_open_top_to_bottom_update_percent</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, window_animator_fb.o(i.window_animator_open_top_to_bottom_update_percent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = window_animator_open_top_to_bottom_update_percent &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_top_to_bottom)
</UL>
<P><STRONG><a name="[7a]"></a>window_animator_open_vtranslate_draw_curr</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, window_animator_fb.o(i.window_animator_open_vtranslate_draw_curr))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_open_vtranslate_draw_curr &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_vtranslate)
</UL>
<P><STRONG><a name="[79]"></a>window_animator_open_vtranslate_draw_prev</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, window_animator_fb.o(i.window_animator_open_vtranslate_draw_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_animator_open_vtranslate_draw_prev &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_image
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_vtranslate)
</UL>
<P><STRONG><a name="[78]"></a>window_animator_open_vtranslate_update_percent</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, window_animator_fb.o(i.window_animator_open_vtranslate_update_percent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = window_animator_open_vtranslate_update_percent &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_animator_fb.o(i.window_animator_create_vtranslate)
</UL>
<P><STRONG><a name="[3c6]"></a>window_animator_prepare</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, window_animator_fb.o(i.window_animator_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_end_frame
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_begin_frame
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_take_snapshot
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_for_open
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_animator_create_for_close
</UL>

<P><STRONG><a name="[317]"></a>main_loop_dispatch_events</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, main_loop_simple.o(i.main_loop_dispatch_events))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = main_loop_dispatch_events &rArr; timer_add &rArr; timer_manager_add &rArr; array_push &rArr; array_extend &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_add
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_add
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_dispatch_input_event
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_recv_event
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_run
</UL>

<P><STRONG><a name="[32a]"></a>main_loop_dispatch_input</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_loop_simple.o(i.main_loop_dispatch_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main_loop_dispatch_input
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_run
</UL>

<P><STRONG><a name="[59]"></a>main_loop_simple_queue_event</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, main_loop_simple.o(i.main_loop_simple_queue_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = main_loop_simple_queue_event &rArr; event_queue_send &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_send
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mutex_unlock
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mutex_lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_loop_simple.o(i.main_loop_simple_init)
</UL>
<P><STRONG><a name="[319]"></a>main_loop_simple_recv_event</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main_loop_simple.o(i.main_loop_simple_recv_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = main_loop_simple_recv_event &rArr; event_queue_recv &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_queue_recv
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mutex_unlock
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mutex_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_dispatch_events
</UL>

<P><STRONG><a name="[58]"></a>main_loop_simple_run</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main_loop_simple.o(i.main_loop_simple_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = main_loop_simple_run &rArr; window_manager_paint &rArr; window_manager_paint_normal &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_sleep
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_dispatch
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_dispatch
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_paint
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_dispatch_input
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_dispatch_events
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_loop_simple.o(i.main_loop_simple_init)
</UL>
<P><STRONG><a name="[2d8]"></a>find_glyph</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, font_bitmap.o(i.find_glyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = find_glyph
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_bitmap_find_glyph
</UL>

<P><STRONG><a name="[48]"></a>font_bitmap_destroy</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, font_bitmap.o(i.font_bitmap_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = font_bitmap_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> font_bitmap.o(i.font_bitmap_init)
</UL>
<P><STRONG><a name="[47]"></a>font_bitmap_find_glyph</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, font_bitmap.o(i.font_bitmap_find_glyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = font_bitmap_find_glyph &rArr; find_glyph
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_glyph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> font_bitmap.o(i.font_bitmap_init)
</UL>
<P><STRONG><a name="[46]"></a>font_bitmap_match</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, font_bitmap.o(i.font_bitmap_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = font_bitmap_match
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> font_bitmap.o(i.font_bitmap_init)
</UL>
<P><STRONG><a name="[1c9]"></a>CLOCK_SetDiv</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd_support.o(i.CLOCK_SetDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcdifPixelClock
</UL>

<P><STRONG><a name="[1c8]"></a>CLOCK_SetMux</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd_support.o(i.CLOCK_SetMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_SetMux
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitLcdifPixelClock
</UL>

<P><STRONG><a name="[2e1]"></a>ELCDIF_SetNextBufferAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_support.o(i.ELCDIF_SetNextBufferAddr))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_online_fb
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_offline_fb
</UL>

<P><STRONG><a name="[1a4]"></a>AWTK_Touch_Init</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, main_loop_rt1052_raw.o(i.AWTK_Touch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = AWTK_Touch_Init &rArr; FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetDefaultConfig
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5406_RT_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disaptch_input
</UL>

<P><STRONG><a name="[56]"></a>main_loop_raw_destroy</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, main_loop_rt1052_raw.o(i.main_loop_raw_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main_loop_raw_destroy &rArr; main_loop_simple_reset &rArr; event_queue_destroy &rArr; tk_free &rArr; node_merge &rArr;  node_merge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_simple_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_loop_rt1052_raw.o(i.main_loop_init)
</UL>
<P><STRONG><a name="[57]"></a>main_loop_raw_dispatch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main_loop_rt1052_raw.o(i.main_loop_raw_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main_loop_raw_dispatch &rArr; platform_disaptch_input &rArr; AWTK_Touch_Init &rArr; FT5406_RT_Init &rArr; LPI2C_MasterTransferBlocking &rArr; LPI2C_MasterReceive &rArr; LPI2C_MasterWaitForTxReady &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disaptch_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_loop_rt1052_raw.o(i.main_loop_init)
</UL>
<P><STRONG><a name="[31c]"></a>main_loop_raw_init_canvas</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, main_loop_rt1052_raw.o(i.main_loop_raw_init_canvas))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = main_loop_raw_init_canvas &rArr; platform_create_lcd &rArr; lcd_mem_rgb565_create_double_fb &rArr; lcd_mem_create_double_fb &rArr; lcd_mem_create &rArr; tk_calloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_manager
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canvas_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_create_lcd
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop_init
</UL>

<P><STRONG><a name="[5b]"></a>on_cancel</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, demo_ui_app.o(i.on_cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = on_cancel &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_quit
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_info_dump
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demo_ui_app.o(i.on_show_dialog)
</UL>
<P><STRONG><a name="[5c]"></a>on_close</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, demo_ui_app.o(i.on_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = on_close &rArr; window_close &rArr; window_manager_remove_child &rArr; window_manager_check_if_need_close_animation &rArr; window_animator_create_for_close &rArr; window_animator_prepare &rArr; widget_paint &rArr; widget_on_paint_background &rArr; widget_draw_background &rArr; canvas_draw_image_ex &rArr; canvas_draw_image_center &rArr; canvas_draw_icon &rArr; canvas_draw_image &rArr; canvas_do_draw_image &rArr; lcd_draw_image
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_close
</UL>
<BR>[Address Reference Count : 2]<UL><LI> demo_ui_app.o(i.on_show_window1)
<LI> demo_ui_app.o(i.on_show_window2)
</UL>
<P><STRONG><a name="[40]"></a>on_dec</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, demo_ui_app.o(i.on_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = on_dec &rArr; progress_bar_set_value &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demo_ui_app.o(i.application_init)
</UL>
<P><STRONG><a name="[3f]"></a>on_inc</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, demo_ui_app.o(i.on_inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = on_inc &rArr; progress_bar_set_value &rArr; widget_invalidate &rArr; widget_set_dirty &rArr;  widget_set_dirty (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_bar_set_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demo_ui_app.o(i.application_init)
</UL>
<P><STRONG><a name="[5a]"></a>on_ok</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, demo_ui_app.o(i.on_ok))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = on_ok &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_quit
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_info_dump
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demo_ui_app.o(i.on_show_dialog)
</UL>
<P><STRONG><a name="[41]"></a>on_show_dialog</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, demo_ui_app.o(i.on_show_dialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = on_show_dialog &rArr; widget_child_on &rArr; widget_on &rArr; emitter_on &rArr; emitter_extends &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_modal
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_mem_info_dump
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_child_on
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>
<BR>[Address Reference Count : 3]<UL><LI> demo_ui_app.o(i.on_show_window1)
<LI> demo_ui_app.o(i.on_show_window2)
<LI> demo_ui_app.o(i.application_init)
</UL>
<P><STRONG><a name="[42]"></a>on_show_window1</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, demo_ui_app.o(i.on_show_window1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = on_show_window1 &rArr; widget_child_on &rArr; widget_on &rArr; emitter_on &rArr; emitter_extends &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_child_on
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demo_ui_app.o(i.application_init)
</UL>
<P><STRONG><a name="[43]"></a>on_show_window2</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, demo_ui_app.o(i.on_show_window2))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = on_show_window2 &rArr; widget_child_on &rArr; widget_on &rArr; emitter_on &rArr; emitter_extends &rArr; tk_realloc &rArr; tk_alloc &rArr; tk_mem_info_dump &rArr; tk_mem_stat &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_child_on
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demo_ui_app.o(i.application_init)
</UL>
<P><STRONG><a name="[3eb]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[3de]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[3fb]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[3f0]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[b]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
